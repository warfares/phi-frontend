/*
  Philosophy.js -- Ultragestion S.A. 
  Copyright 2005-2009 ULTRAGESTION, Inc., released under the Clear BSD license.

  Please see http://svn.ultragestion.org/trunk/philosophy/license.txt
  for the full text of the license.

  Includes compressed code under the following licenses:

  (For uncompressed versions of the code used please see the
  Philosophy SVN repository: <http://phi.ultragestion.cl/>)
*/
﻿
Ext.ns("Philosophy.Config");SERVER='http://localhost:1270';GEOSERVER='http://localhost:8080';Proj4js.libPath=SERVER+'/JSFrontEnd/Content/js/proj4js/lib/';Ext.BLANK_IMAGE_URL='/JSFrontEnd/Content/js/ext-3.1.0/resources/images/default/s.gif';Philosophy.Config={varsion:1.1,SRID:32719,wmsNameSpace:'cc',wmsUrl:GEOSERVER+'/geoserver/wms?',wfsUrl:GEOSERVER+'/geoserver/wfs?',wmsLegend:GEOSERVER+'/geoserver/wms?REQUEST=GetLegendGraphic&VERSION=1.0.0&FORMAT=image/png&WIDTH=17&HEIGHT=17&LAYER=',wmsBigLegend:GEOSERVER+'/geoserver/wms?REQUEST=GetLegendGraphic&VERSION=1.0.0&FORMAT=image/png&WIDTH=100&HEIGHT=100&LAYER=',kmlFileUrl:'Content/upload-files/kml/',linkFileUrl:'Content/upload-files/link/',geocodingApiKey:'AibKpZl_cZCN_AYsBnsGFRwq0niw0wQvOG3woDP8GzTn67xHTOpcYxWtd3m1pqpN6iFWS-cFpC4IXL6KwDCTIw',geocodingUrlBase:'http://ultramap.cl/api/rest/v2.0/geocode'}
﻿
Philosophy.Service={userService:'/UserService.svc/rest',locationService:'/LocationService.svc/rest',workspaceService:'/WorkSpaceService.svc/rest',geoService:'/GeoService.svc/rest',utilService:'/UtilService.svc/rest',layerService:'/LayerService.svc/rest'};Philosophy.UriTemplate={users:'/users/json',user:'/user/',userCreate:'/user/create',userUpdate:'/user/update',userEnabled:'/user/enabled',userLogin:'/user/login',userChangePassword:'/user/changepassword',locations:'/locations/json',locationsByUser:'/locationsbyuser/json/',locationsFavoritesByUser:'/locationsbyuser/favorites/json/',location:'/location/',locationCreate:'/location/create',locationUpdate:'/location/update',locationFavorite:'/location/favorite',workspaces:'/ReadWorkSpacesAsJson',workspacesByUser:'/ReadWorkSpacesByUser',workspace:'/workspace/',workspaceCreate:'/workspace/create',workspaceUpdate:'/workspace/update',workspacePublic:'/workspace/public',workspaceSearch:'/SearchWorkSpaces',geoGetBBox:'/GetBBox',geoGetWithIn:'/GetWithIn',geoGetGroupWithIn:'/GetGroupWithIn',geoGetGroupWithInBbox:'/GetGroupWithInBbox',geoGetMetadata:'/GetMetadata',geoGetUniqueValues:'/GetUniqueColumnValues',geoGetQueryData:'/GetQueryData',layers:'/ReadLayers',linksByLayer:'/ReadLinksByLayer',layerSearch:'/SearchLayers',layerRead:'/Read',utilParseFile:'/ParseFile/',utilTransformFile:'/TransformFile/',utilProxyTextFile:'/UploadFile/',getUri:function(service,action,option){var strService=Philosophy.Service[service];var strAction=Philosophy.UriTemplate[action];var strOption=option||'';return SERVER+strService+strAction+strOption;}};﻿
Ext.ns("Philosophy.Util");Philosophy.Util={popupMessageContainer:null,popupMessage:function(title,message,container){container=container||document.body;var createBox=function(t,m){return['<div class="msg">','<div class="popupMessage"><b>',t,'</b><br/>',m,'</div>','</div>'].join('');};this.popupMessageContainer=Ext.DomHelper.insertFirst(document.body,{id:'msg-div'},true);this.popupMessageContainer.alignTo(container,'c-c',[0,-100]);var box=Ext.DomHelper.append(this.popupMessageContainer,{html:createBox(title,message)},true);box.fadeIn({endOpacity:.75}).pause(2).fadeOut({remove:true});},clone:function(o){if(!o||'object'!==typeof o){return o;}
var c='function'===typeof o.pop?[]:{};var p,v;for(p in o){if(o.hasOwnProperty(p)){v=o[p];if(v&&'object'===typeof v){c[p]=this.clone(v);}
else{c[p]=v;}}}
return c;},buildColumnModel:function(metadata){var render=function(val,m,record){return'<img src="content/images/icons/vector.png" />';}
var m=[];m.push({header:'',width:25,renderer:render});for(i=0;i<metadata.length;i++){var h=metadata[i]=='wkt_geometry'?true:false;var column={header:metadata[i],dataIndex:metadata[i],hidden:h};m.push(column);}
var cm=new Ext.grid.ColumnModel(m);return cm;},buildDataStore:function(metadata){var reader=new Ext.data.JsonReader({root:'Rows',totalProperty:'Count',fields:metadata});var proxy=new Ext.data.HttpProxy({method:'GET',url:Philosophy.UriTemplate.getUri('geoService','geoGetQueryData')});var ds=new Ext.data.Store({proxy:proxy,reader:reader});return ds;},getAppCfg:function(){var _this=this;var cfg={theme:_this.readCookie("theme")||'xtheme-gray.css',language:_this.readCookie("language")||'Spanish'};return cfg},setAppCfg:function(cfg){var theme=cfg.theme;var language=cfg.language;this.createCookie('theme',theme,60);this.createCookie('language',language,60);},createCookie:function(name,value,days){if(days){var date=new Date();date.setTime(date.getTime()+(days*24*60*60*1000));var expires="; expires="+date.toGMTString();}
else var expires="";document.cookie=name+"="+value+expires+"; path=/";},readCookie:function(name){var nameEQ=name+"=";var ca=document.cookie.split(';');for(var i=0;i<ca.length;i++){var c=ca[i];while(c.charAt(0)==' ')c=c.substring(1,c.length);if(c.indexOf(nameEQ)==0)return c.substring(nameEQ.length,c.length);}
return null;},eraseCookie:function(name){createCookie(name,"",-1);},swapExtTheme:function(theme){var cssPath='Content/js/ext-2.2.1/resources/css/'
Ext.util.CSS.swapStyleSheet('theme',cssPath+theme);if(Ext.state.Manager.getProvider()){Ext.state.Manager.set('theme',theme);}},fixWCFJsonDate:function(v){return new Date(parseFloat(v.slice(6,19)));}};Philosophy.Msg=Philosophy.Util.popupMessage;﻿
Ext.ns("Philosophy");Philosophy.Layer={apliedLayers:[{'name':'cerrocolorado.postes','title':'canal'}],getLayers:function(){var l=Philosophy.Util.clone(this.apliedLayers);var layerName=[];for(x=0;x<l.length;x++)
layerName.push(l[x].name)
return layerName;},getLayerTitles:function(){var l=Philosophy.Util.clone(this.apliedLayers);var layerTitle=[];for(x=0;x<l.length;x++)
layerTitle.push(l[x].title)
return layerTitle;},getWMSLayers:function(ns){var l=this.getLayers();for(x=0;x<l.length;x++){l[x]=l[x].split('.')[1];l[x]=ns+":"+l[x];}
return l.join(',');},getLayerIdString:function(){var l=this.getLayers();return l.join(',');},zoomToExtent:function(layerName){var l={Name:layerName,SRID:'96'};Ext.Ajax.request({waitMsg:Philosophy.Globalization.For('Wait...'),url:Philosophy.UriTemplate.getUri('geoService','geoGetBBox'),method:'POST',headers:{'Content-Type':'text/json'},jsonData:l,failure:function(response,options){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Problem in call'));},success:function(response,options){var bbox=Ext.util.JSON.decode(response.responseText);var bound=new OpenLayers.Bounds(bbox.minx,bbox.miny,bbox.maxx,bbox.maxy);Philosophy.Map.zoomToExtent(bound,true);}});},layerDetail:function(layerName){var win=new Phi.view.window.LayerDetail({layer:layerName});win.show();}};﻿
Ext.ns("Philosophy");Philosophy.MarkerTip=new Ext.ToolTip({width:200,title:'dummy',html:'dummy text.....',trackMouse:true});Philosophy.Marker={icons:{white:{path:'content/images/Markers/pushpin.png',dimx:26,dimy:35},red:{path:'content/images/Markers/pushpinred.png',dimx:26,dimy:35},green:{path:'content/images/Markers/pushpingreen.png',dimx:26,dimy:35},blue:{path:'content/images/Markers/pushpinblue.png',dimx:26,dimy:35},orange:{path:'content/images/Markers/pushpinorange.png',dimx:26,dimy:35},purple:{path:'content/images/Markers/pushpinpurple.png',dimx:26,dimy:35},yellow:{path:'content/images/Markers/pushpinyellow.png',dimx:26,dimy:35},googleMarker:{path:'content/images/Markers/google_marker.png',dimx:37,dimy:34},point4red:{path:'content/images/Markers/point4_red.png',dimx:4,dimy:4},point5red:{path:'content/images/Markers/point5_red.png',dimx:5,dimy:5},point6red:{path:'content/images/Markers/point6_red.png',dimx:6,dimy:6},point4yellow:{path:'content/images/Markers/point4_yellow.png',dimx:4,dimy:4},point5yellow:{path:'content/images/Markers/point5_yellow.png',dimx:5,dimy:5},point6yellow:{path:'content/images/Markers/point6_yellow.png',dimx:6,dimy:6},},drawMarker:function(x,y,iconId,data,title,html){var icondef=this.icons[iconId]||this.icons['white'];var lonLat=new OpenLayers.LonLat(x,y);var size=new OpenLayers.Size(icondef.dimx,icondef.dimy);var offset=new OpenLayers.Pixel(-(size.w/2),-size.h);var marker=new OpenLayers.Marker(lonLat,new OpenLayers.Icon(icondef.path,size,offset));Philosophy.Map.markerLayer.addMarker(marker);marker.events.register('mousedown',marker,function(evt){var disp=Philosophy.Map.WsmToDispProj(x,y);var win=new Phi.view.window.MarkerData({data:data,coordinate:[disp.lon,disp.lat]});win.show(this);OpenLayers.Event.stop(evt);});marker.events.register('mouseover',marker,function(evt){var disp=Philosophy.Map.WsmToDispProj(x,y);var nt=title||'Marker';var nh=html||'<b>x:</b>'+disp.lon+'<br/><b>y:</b>'+disp.lat;var div=marker.icon.imageDiv;var tt=Philosophy.MarkerTip;tt.initTarget(div);tt.showAt([0,0]);tt.setTitle(nt);tt.body.update(nh);OpenLayers.Event.stop(evt);});return marker;},clearAllMarkers:function(){Philosophy.Map.markerLayer.clearMarkers();}};Ext.ns("Philosophy");Philosophy.Session={_user:null,setUser:function(user){this._user=user;},getUser:function(){return this._user;}};Ext.ns('Philosophy.Layer.Data')
Philosophy.Layer.Data=[{"Id":0,"checked":false,"text":"CerroColorado","leaf":false,"children":[{"Id":1,"checked":false,"text":"area_construida","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.area_construida"},{"Id":2,"checked":false,"text":"antena","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.antena"},{"Id":3,"checked":false,"text":"b_botadero","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.b_botadero"},{"Id":4,"checked":false,"text":"b_talud","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.b_talud"},{"Id":5,"checked":false,"text":"drenaje","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.drenaje"},{"Id":6,"checked":false,"text":"barrera_muro","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.barrera_muro"},{"Id":7,"checked":false,"text":"camino_no_pav","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.camino_no_pav"},{"Id":8,"checked":false,"text":"camino_pav","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.camino_pav"},{"Id":9,"checked":false,"text":"canal","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.canal"},{"Id":10,"checked":false,"text":"cerco","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.cerco"},{"Id":11,"checked":false,"text":"eje_quebrada","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.eje_quebrada"},{"Id":12,"checked":false,"text":"construccion","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.construccion"},{"Id":13,"text":"curvas_indice","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.curvas_indice"},{"Id":14,"text":"curvas_intermedias","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.curvas_intermedias"},{"Id":15,"checked":false,"text":"est_metalicas","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.est_metalicas"},{"Id":16,"checked":false,"text":"faja_transportadora","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.faja_transportadora"},{"Id":17,"checked":false,"text":"huella_sendero","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.huella_sendero"},{"Id":18,"checked":false,"text":"laguna","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.laguna"},{"Id":19,"checked":false,"text":"limite_manzana","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.limite_manzana"},{"Id":20,"checked":false,"text":"multicancha","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.multicancha"},{"Id":21,"checked":false,"text":"p_botadero","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.p_botadero"},{"Id":22,"checked":false,"text":"tanques_agua","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.tanques_agua"},{"Id":23,"checked":false,"text":"p_contacto","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.p_contacto"},{"Id":24,"checked":false,"text":"p_talud","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.p_talud"},{"Id":25,"checked":false,"text":"tuberia","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.tuberia"},{"Id":26,"checked":false,"text":"piscina_reservorio","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.piscina_reservorio"},{"Id":27,"checked":false,"text":"postes","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.postes"},{"Id":28,"checked":false,"text":"postes_alta_tension","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.postes_alta_tension"},{"Id":29,"checked":false,"text":"terreno_cultivo","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.terreno_cultivo"},{"Id":30,"checked":false,"text":"puente","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.puente"},{"Id":31,"checked":false,"text":"surco_fundacion","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.surco_fundacion"},{"Id":32,"checked":false,"text":"torre_alta_tension","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.torre_alta_tension"},{"Id":33,"checked":false,"text":"tunel","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.tunel"},{"Id":34,"checked":false,"text":"vegetacion","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.vegetacion"},{"Id":35,"checked":false,"text":"vereda","leaf":true,iconCls:"icon-layer","layerId":"cerrocolorado.vereda"}],"layerId":null}];﻿
Ext.ns("Philosophy.Globalization.Dictionaries");Philosophy.Globalization.Dictionaries.Deutsch={'Search':'Suche','Search Not Found':'Suche ohne Ergebnis','Search Found':'Suche mit Ergebnis','Yes':'Ja','No':'Nein','Wait...':'Bitte warten...','Warning':'Warnung','Problem in call':'Fehler im Aufruf','Are you sure ?':'Sicher?','Add':'Hinzufügen','Edit':'Ändern','Delete':'Löschen','Empty':'Leer','Clear':'Leeren','Create':'Erstellen','Select One':'Wähle aus','Click on map':'Klick auf Karte','Close':'Schließen','Submit':'Ok','Execute':'Ausführen','Description':'Beschreibung','Enabled':'Aktivieren','Disable':'Deaktivieren','Field Required':'Feld obligatorisch','Check form':'Formular überprüfen','Passwords are not equal':'Passwörter sind nicht gleich','At least 4 characters':'Mindestens 4 Zeichen erforderlich','Reload':'Erneut laden','Select All':'Alles auswählen','No record found':'Kein Eintrag gefunden','Select at least one row':'Wähle mindestens eine Zeile aus','Select':'Wähle aus','Restart app now ?':'Applikation jetzt neu starten?','Export':'Exportieren','Error on Export':'Fehler beim Export','Check Data':'Daten überprüfen','Export my current map view':'Aktuellen Kartenausschnit exportieren','DPI':'DPI','Select a DPI Option':'Wähle DPI-Option','Select a Zoom Level':'Wähle Zoom-Level','Zoom':'Zoom','Page Size (PDF)':'Seitenformat','Select a page size':'Wähle Seitenformat','Filter by bounds':'Auswahl über Ausschnitt','Login':'Login','User':'Benutzername','Password':'Passwort','User or password not valid':'Benutzername oder Passwort ungültig','DashBoard':'Werkzeuge','Display Projections':'Koordinatensystem','Control Panel':'Kontrollpanel','LogOut':'Ausloggen','Zoom Box In':'Zoom Box In','Zoom Box Out':'Zoom Box Out','Zoom In':'Zoom In','Zoom Out':'Zoom Out','Zoom Init':'Zoom Init','Pan':'Pan','Undo':'Undo','Redo':'Redo','Info':'Click info','Zoom Box In Desc':'description','Zoom Box Out Desc':'description','Zoom In Desc':'description','Zoom Out Desc':'description','Zoom Init Desc':'description','Pan Desc':'description','Undo Desc':'description','Redo Desc':'description','Info Desc':'description','Banner Title':'CODELCO EL TENIENTE','Banner subA':'SERVIDOR DE MAPAS DIVISION EL TENIENTE','Banner subB':'GERENCIA DE SUSTENTABILIDAD','My Profile':'Mein Profil','UserName':'Benutzername','Name':'Name','Email':'Email','Layers':'Layer','Apply':'Ausführen','Apply Desc':'Draw the selected layer','Apply msg':'Layer anzeigen','Query':'Abfrage','Legend':'Legende','Check only this':'Nur ausgewählten Layer aktivieren','Search Desc':'Search layers','Map':'Karte','Navigation':'Navigation','Vector':'Vektor','Measure':'Messen','Alpha':'Alpha','Zoom In':'Zoom In','Zoom Out':'Zoom Out','Color Selection':'Farbauswahl','Point':'Punkt','Line':'Linie','Polyline':'Polyline','Polygon':'Polygon','Regular Polygon':'Gleichmässiges Polygon','Drag Polygon':'Objekt verschieben','Modify Polygon':'Objekt bearbeiten','Delete Polygon':'Objekt löschen','Clear All':'Alles löschen','Hand':'Pan','Rule':'Distanz','Area':'Fläche','Layer Description':'Layer-Beschreibung','Layer Information':'Objekt-Information','Box Information':'Box-Information','Point coordinates':'Koordinaten','Box coordinates':'Koordinaten Box','Locations':'Orte','Favorite':'Favorit','Layer Resume':'Layer Resume','Personal':'Persönliche Einstellungen','Profile Information':'Profilinformation','Administration':'Administration','User Administration':'Benutzeradministration','Application Settings':'Programmkonfiguration','Profiledesc':'Personenbezogene Daten, Name, Kontaktinformation, etc.','Passworddesc':'Passwort ändern','UserAdmindesc':'Benutzer suchen, erstellen, aktualisieren, löschen, aktivieren, deaktivieren, Passwort ändern','AppAdmindesc':'Programm anpassen, Spracheinstellung, etc..  ','User Detail':'Benutzerdetails','LastName':'Nachname','Layer Query':'Abfrage','Select Layer':'Wähle Layer','Fields':'Felder','Operator':'Operator','Select Operator':'Wähle Operator','Value':'Wert','Values':'Werte','Query Preview':'Vorschau','Must select layer and field':'Layer und Feld müssen ausgewählt sein','Select one field':'Wähle Feld','Needs a value field':'Wähle Feld-Wert','Draw':'Zeichne','Clear already draw geometries ?':'Zeichenfläche löschen?','Application settings':'Programmkonfiguration','User Administration':'Benutzeradministration','Location Detail':'Ortsinformation','Only 200 characters':'Max. 200 Zeichen'};﻿Ext.ns("Philosophy.Globalization.Dictionaries");Philosophy.Globalization.Dictionaries.English={'Search':'Search','Search Not Found':'Search Not Found','Search Found':'Search Found','Yes':'Yes','No':'No','Wait...':'Wait...','Warning':'Warning','Problem in call':'Problem in call','Are you sure ?':'Are you sure ?','Add':'Add','Edit':'Edit','Delete':'Delete','Empty':'Empty','Clear':'Clear','Create':'Create','Select One':'Select One','Click on map':'Click on map','Close':'Close','Submit':'Submit','Execute':'Execute','Description':'Description','Enabled':'Enabled','Disable':'Disable','Field Required':'Field Required','Check form':'Check form','Passwords are not equal':'Passwords are not equal','At least 4 characters':'At least 4 characters','Reload':'Reload','Select All':'Select All','No record found':'No record found','Select at least one row':'Select at least one row','Select':'Select','Restart app now ?':'Restart app now ?','Contain':'Contain','Begin':'Begin','End':'End','Exact':'Exact','Export':'Export','Error on Export':'Error on Export','Check Data':'Check Data','Export my current map view':'Export my current map view','DPI':'DPI','Select a DPI Option':'Select a DPI Option','Select a Zoom Level':'Select a Zoom Level','Zoom':'Zoom','Page Size (PDF)':'Page Size (PDF)','Select a page size':'Select a page size','Filter by bounds':'Filter by bounds','Map Export':'Map Export','Layer Export':'Layer Export','Format':'Format','Login':'Login','User':'User','Password':'Password','User or password not valid':'User or password not valid','DashBoard':'DashBoard','Display Projections':'Display Projections','Control Panel':'Control Panel','LogOut':'LogOut','Zoom Box In':'Zoom Box In','Zoom Box Out':'Zoom Box Out','Zoom In':'Zoom In','Zoom Out':'Zoom Out','Zoom Init':'Zoom Init','Pan':'Pan','Undo':'Undo','Redo':'Redo','Info':'Click info','Zoom Box In Desc':'description','Zoom Box Out Desc':'description','Zoom In Desc':'description','Zoom Out Desc':'description','Zoom Init Desc':'description','Pan Desc':'description','Undo Desc':'description','Redo Desc':'description','Info Desc':'description','Banner Title':'CODELCO EL TENIENTE','Banner subA':'MAP SERVER EL TENIENTE DIVISION','Banner subB':'MANAGEMENT OF SUSTAINABILITY','My Profile':'My Profile','UserName':'UserName','Name':'Name','Email':'Email','Layers':'Layers','Apply':'Apply','Apply Desc':'Draw the selected layer','Apply msg':'Applying Layers','Query':'Query','Legend':'Legend','Check only this':'Check only this','Search Desc':'Search layers','Map':'Map','Tools':'Tools','Navigation':'Navigation','Vector':'Vector','Measure':'Measure','Alpha':'Alpha','Zoom In':'Zoom In','Zoom Out':'Zoom Out','Color Selection':'Color Selection','Point':'Point','Line':'Line','Polyline':'Polyline','Polygon':'Polygon','Regular Polygon':'Regular Polygon','Drag Polygon':'Drag Polygon','Modify Polygon':'Modify Polygon','Delete Polygon':'Delete Polygon','Clear All':'Clear All','Hand':'Hand','Rule':'Rule','Area':'Area','Layer Description':'Layer Description','Layer Information':'Layer Information','Box Information':'Box Information','Point coordinates':'Point coordinates','Box coordinates':'Box coordinates','Locations':'Locations','Favorite':'Favorite','Layer Resume':'Layer Resume','Personal':'Personal','Profile Information':'Profile Information','Administration':'Administration','User Administration':'User Administration','Application Settings':'Application Settings','Profiledesc':'Information about me, names, contact information, etc.. ','Passworddesc':'Change my current system login password','UserAdmindesc':'Find all system users... create, update, delete, change password, enabled, disabled users','AppAdmindesc':'Customize application, select theme (lool&feel), change lenguage, etc..  ','UploadFiledesc':'Draw position marks on the current map from "coordinate file"','TransformFiledesc':'Transform "coordinate file" to diferents projections','KMLFiledesc':'Upload and draw <b>simples</b> KML files on the current map','User Detail':'User Detail','LastName':'LastName','Layer Query':'Layer Query','Select Layer':'Select Layer','Fields':'Fields','Operator':'Operator','Select Operator':'Select Operator','Value':'Value','Values':'Values','Query Preview':'Query Preview','Must select layer and field':'Must select layer and field','Select one field':'Select one field','Needs a value field':'Needs a value field','Draw':'Draw','Clear already draw geometries ?':'Clear already draw geometries ?','Applitation settings':'Applitation settings','User Administration':'User Administration','Language':'Language','Theme':'Theme','Location Detail':'Location Detail','Only 200 characters':'Only 200 characters'};﻿Ext.ns("Philosophy.Globalization.Dictionaries");Philosophy.Globalization.Dictionaries.Spanish={'Search':'Búsqueda','Search Not Found':'No se encontraron resultados para la búsqueda','Search Found':'Se encontraron resultados para la búsqueda','Yes':'Si','No':'No','Wait...':'Espere...','Warning':'Advertencia','Problem in call':'Problema en la llamada','Are you sure ?':'Esta seguro ?','Add':'Agregar','Edit':'Editar','Delete':'Eliminar','Empty':'Vacio','Clear':'Limpiar','Create':'Crear','Select One':'Seleccione','Click on map':'Click sobre el mapa','Close':'Cerrar','Submit':'Aceptar','Execute':'Execute','Description':'Descripción','Enabled':'Habilitado','Disable':'Deshabilitar','Field Required':'Campo requerido','Check form':'Verifique el formulario','Passwords are not equal':'No coinciden las contraseñas','At least 4 characters':'Ingrese almenos 4 caracteres','Reload':'Actualizar','Select All':'Seleccionar todo','No record found':'No se encontraron archivos','Select at least one row':'Seleccione una fila','Select':'Seleccione','Restart app now ?':'Reiniciar la aplicacion ahora ?','Contain':'Contenga','Begin':'Comienze','End':'Termine','Exact':'Exacto','Select at least one layer':'Seleccione almenos una columna','Export':'Exportar','Error on Export':'Error Imprimiendo','Check Data':'Verifique los datos','Export my current map view':'Imprimir mi vista de mapa actual','DPI':'DPI','Select a DPI Option':'Elija una opción de DPI','Select a Zoom Level':'Seleccione un nivel de acercamiento','Zoom':'Acercamiento','Page Size (PDF)':'Tamaño de Página (PDF)','Select a page size':'Seleccione un tamaño de página','Filter by bounds':'Filtro por región','Map Export':'Exportar Mapa','Layer Export':'Exportar Capa','Format':'Formato','Login':'Login','User':'Usuario','Password':'Contraseña','User or password not valid':'Usuario o Contraseña no valido','DashBoard':'Herramientas','Display Projections':'Proyecciones','Control Panel':'Panel de Control','LogOut':'LogOut','Zoom Box In':'Zoom Box In','Zoom Box Out':'Zoom Box Out','Zoom In':'Zoom In','Zoom Out':'Zoom Out','Zoom Init':'Zoom Init','Pan':'Pan','Undo':'Deshacer','Redo':'Hacer','Info':'Click info','Zoom Box In Desc':'description','Zoom Box Out Desc':'description','Zoom In Desc':'description','Zoom Out Desc':'description','Zoom Init Desc':'description','Pan Desc':'description','Undo Desc':'description','Redo Desc':'description','Info Desc':'description','Banner Title':'CODELCO EL TENIENTE','Banner subA':'SERVIDOR DE MAPAS DIVISION EL TENIENTE','Banner subB':'GERENCIA DE SUSTENTABILIDAD','My Profile':'Mi Perfil','UserName':'Usuario','Name':'Nombre','Email':'Correo','Layers':'Capas','Apply':'Aplicar','Apply Desc':'Dibuja las capas seleccionadas','Apply msg':'Aplicando Capas','Query':'Consulta','Legend':'Leyenda','Check only this':'Seleccione solo esta','Search Desc':'Busqueda de capas','Map':'Mapa','Tools':'Herramientas','Navigation':'Navegación','Vector':'Vectores','Measure':'Medidas','Alpha':'Alpha','Zoom In':'Zoom In','Zoom Out':'Zoom Out','Color Selection':'Selección de Color','Point':'Punto','Line':'Linea','Polyline':'Polilinea','Polygon':'Poligono','Regular Polygon':'Poligono Regular','Drag Polygon':'Mover Poligono','Modify Polygon':'Modificar Poligono','Delete Polygon':'Borrar Poligono','Clear All':'Limpiar Todo','Hand':'Cursor','Rule':'Regla','Area':'Area','Layer Description':'Descripción de Capa','Layer Information':'Información de Capa','Box Information':'Box','Point coordinates':'Coordenadas','Box coordinates':'Coordenadas recuadro','Locations':'Locaciones','Favorite':'Favorito','Layer Resume':'Capas Aplicadas','Personal':'Personal','Profile Information':'Información del Perfil','Administration':'Administración','User Administration':'Administración de usuarios','Application Settings':'Configuración de la Aplicación','Profiledesc':'Información acerca de mi, nombre, información de contacto, etc.. ','Passworddesc':'Cambiar mi contraseña de Sistema','UserAdmindesc':'Buscar usuarios del sistema... crear, actualizar, eliminar, cambiar contraseñas, habilitar, deshabilitar usuarios','AppAdmindesc':'Personalizar la aplicación, seleccionar apariencia, cambiar lenguaje, etc..  ','UploadFiledesc':'Dibujar marcas de posición en el mapa a partir de "archivos de coordenadas"','TransformFiledesc':'Transforma "archivos de coordenadas" en diferentes projecciones','KMLFiledesc':'Subir y dibujar KML <b>simples</b> en el mapa','User Detail':'Detalle Usuario','LastName':'Apellido','Layer Query':'Consulta Capas','Select Layer':'Seleccione una Capa','Fields':'Campos','Operator':'Operador','Select Operator':'Seleccione Operador','Value':'Valor','Values':'Valores','Query Preview':'Vista Previa','Must select layer and field':'Debe seleccionar capa y campo','Select one field':'Seleccione un campo','Needs a value field':'Necesita especificar un valor','Draw':'Dibujar','Clear already draw geometries ?':'Limpiar Pantalla ?','Application settings':'Configuración','User Administration':'Administración de usuarios','Language':'Lenguaje','Theme':'Tema','Location Detail':'Detalle de Locación','Only 200 characters':'Solo 200 caracteres'};﻿
Ext.ns('Philosophy.Globalization');Philosophy.Globalization.Languages={'English':Philosophy.Globalization.Dictionaries.English,'Spanish':Philosophy.Globalization.Dictionaries.Spanish,'Deutsch':Philosophy.Globalization.Dictionaries.Deutsch};var language=Philosophy.Util.readCookie('language')||'Spanish'
Philosophy.Globalization.Dictionary=Philosophy.Globalization.Languages[language];Philosophy.Globalization.For=function(phrase){if(phrase in Philosophy.Globalization.Dictionary){return Philosophy.Globalization.Dictionary[phrase];}
return phrase;};Philosophy.Globalization.ChangeTo=function(Language){if(Language in Philosophy.Globalization.Languages){Philosophy.Globalization.Dictionary=Philosophy.Globalization.Languages[Language];pageTracker._trackPageview("/Codelco/Globalization/ChangeTo/"+Languaje);}};﻿
Ext.ns("Phi.view.comboBox");Phi.view.comboBox.BaseLayer=Ext.extend(Ext.ux.IconCombo,{displayField:'name',valueField:'value',iconClsField:'cls',width:180,mode:'local',forceSelection:true,triggerAction:'all',selectOnFocus:true,allowBlank:false,editable:false,initComponent:function(){var _this=this;var storeLayers=new Ext.data.SimpleStore({fields:['value','name','cls']});Ext.apply(this,{store:storeLayers})
this.on('select',function(combo,record,index){var layerName=record.data.value;this.setBaseLayerByName(layerName);});Phi.view.comboBox.BaseLayer.superclass.initComponent.call(this);},onRender:function(){Phi.view.comboBox.BaseLayer.superclass.onRender.apply(this,arguments);var t=new Ext.ToolTip({target:this.el,title:'Capas base',width:200,html:'Listado de cartografia base disponible, por ejemplo: Google, OpenStreetMap, Ultramap, etc.',trackMouse:true});},setBaseLayerByName:function(layerName){var l=Philosophy.Map.map.getLayersByName(layerName);Philosophy.Map.map.setBaseLayer(l[0]);Philosophy.Map.map.updateSize();},loadBaseLayers:function(){var data=[];for(var i=0,len=Philosophy.Map.map.layers.length;i<len;i++){var l=Philosophy.Map.map.layers[i];if(l.isBaseLayer){var item=[l.name,l.name,l.icon];data.unshift(item);}}
this.store.loadData(data);this.setValue(Philosophy.Map.baseLayer.name);}});﻿
Ext.ns("Phi.view.comboBox");Phi.view.comboBox.Layer=Ext.extend(Ext.form.ComboBox,{fieldLabel:Philosophy.Globalization.For('Layer'),displayField:'Title',valueField:'Name',mode:'local',forceSelection:true,triggerAction:'all',selectOnFocus:true,allowBlank:false,editable:false,initComponent:function(){this.tpl=new Ext.XTemplate('<tpl for=".">'
+'<div class="x-combo-list-item ux-icon-combo-item icon-layer">'
+'{Title}'
+'</div></tpl>');var proxy_layer=new Ext.data.HttpProxy({method:'GET',url:Philosophy.UriTemplate.getUri('layerService','layers')});var store=new Ext.data.Store({reader:new Ext.data.JsonReader({fields:["Name","Title"]}),proxy:proxy_layer,sortInfo:{field:'Name',direction:"ASC"}});Ext.apply(this,{store:store});Phi.view.comboBox.Layer.superclass.initComponent.call(this);store.load();}});﻿
Ext.ns("Phi.view.comboBox");Phi.view.comboBox.Marker=Ext.extend(Ext.ux.IconCombo,{fieldLabel:Philosophy.Globalization.For('Marker'),displayField:'name',valueField:'value',iconClsField:'cls',mode:'local',forceSelection:true,triggerAction:'all',selectOnFocus:true,allowBlank:false,editable:false,initComponent:function(){var _this=this;var store=new Ext.data.SimpleStore({fields:['value','name','cls'],data:[['point4red','Point 4 Red','icon-point4-red'],['point5red','Point 5 Red','icon-point5-red'],['point6red','Point 6 Red','icon-point6-red'],['point4yellow','Point 4 Yellow','icon-point4-yellow'],['point5yellow','Point 5 Yellow','icon-point5-yellow'],['point6yellow','Point 6 Yellow','icon-point6-yellow'],['googleMarker','Google Marker','icon-google-marker']]});Ext.apply(this,{store:store});Phi.view.comboBox.Marker.superclass.initComponent.call(this);this.setValue('point4red');}});﻿
Ext.ns("Phi.view.comboBox");Phi.view.comboBox.Pattern=Ext.extend(Ext.form.ComboBox,{displayField:'name',valueField:'value',mode:'local',width:80,value:'0',allowBlank:false,readOnly:true,forceSelection:true,triggerAction:'all',emptyText:Philosophy.Globalization.For('Select'),selectOnFocus:true,allowBlank:false,readOnly:true,initComponent:function(){var _this=this;var store=new Ext.data.SimpleStore({fields:['value','name'],data:[['0',Philosophy.Globalization.For('Contain')],['1',Philosophy.Globalization.For('Begin')],['2',Philosophy.Globalization.For('End')],['3',Philosophy.Globalization.For('Exact')]]});Ext.apply(this,{store:store});Phi.view.comboBox.Pattern.superclass.initComponent.call(this);this.setValue('0');}});﻿
Ext.ns("Phi.view.comboBox");Phi.view.comboBox.Projection=Ext.extend(Ext.ux.IconCombo,{fieldLabel:Philosophy.Globalization.For('Projection'),displayField:'name',valueField:'value',iconClsField:'cls',mode:'local',forceSelection:true,triggerAction:'all',selectOnFocus:true,allowBlank:false,editable:false,initComponent:function(){var _this=this;var store=new Ext.data.SimpleStore({fields:['value','name','cls'],data:[['WSM','Web Spherical Mercator','icon-projection'],['4326','EPSG:4326 - (WGS 84)','icon-projection'],['32719','EPSG:32719 - (WGS 84 / UTM zone 19S)','icon-projection'],['24819','EPSG:24819 - (PSAD56 / UTM zone 19S)','icon-projection'],['31994','EPSG:31994 - (SIRGAS / UTM zone 19S)','icon-projection'],['29189','EPSG:29189 - (SAD69  / UTM zone 19S)','icon-projection']]});Ext.apply(this,{store:store});Phi.view.comboBox.Projection.superclass.initComponent.call(this);this.setValue('4326');},onRender:function(){Phi.view.comboBox.Projection.superclass.onRender.apply(this,arguments);var t=new Ext.ToolTip({target:this.el,title:'Proyecciones',width:200,html:'Listado de projecciones disponible',trackMouse:true});}});﻿
Ext.ns("Phi.view.slider");Phi.view.slider.BaseLayer=Ext.extend(Ext.Slider,{title:Philosophy.Globalization.For('Alpha'),width:70,value:100,increment:1,minValue:0,maxValue:100,initComponent:function(){var tip=new Ext.ux.SliderTip({getText:function(slider){return String.format('<b>{0}% visible</b>',slider.getValue());}});this.plugins=tip;this.on('change',function(slider,v){var opacity=v!==0?opacity=v/100:0;Philosophy.Map.baseLayer.setOpacity(opacity);});Phi.view.slider.BaseLayer.superclass.initComponent.call(this);},onRender:function(){Phi.view.slider.BaseLayer.superclass.onRender.apply(this,arguments);var t=new Ext.ToolTip({target:this.el,title:'Trasparencia',width:200,html:'Esconde capa base seleccionada en conjunto con los vuelos, permitiendo ver solo las geometrias',trackMouse:true});}});﻿
Ext.ns("Phi.view.menu");Phi.view.menu.Layer=Ext.extend(Ext.menu.Menu,{layerName:null,layerTitle:null,enableCheckLayer:false,node:null,rowIndex:null,initComponent:function(){var _this=this;this.addEvents('checkLayer');Phi.view.menu.Layer.superclass.initComponent.call(this);this.add({iconCls:'icon-search-list',text:Philosophy.Globalization.For('Layer Details'),handler:_this.showDetails});this.add({iconCls:'icon-database',text:Philosophy.Globalization.For('Query'),handler:_this.showQuery});this.add({iconCls:'icon-zoom',text:Philosophy.Globalization.For('Zoom'),handler:_this.zoomToExtent});if(this.enableCheckLayer)
this.add({iconCls:'icon-tick',text:Philosophy.Globalization.For('Check only this'),handler:_this.checkLayer});this.add({iconCls:'icon-link',text:Philosophy.Globalization.For('Links'),handler:_this.showLinks});},showDetails:function(){Philosophy.Layer.layerDetail(this.parentMenu.layerName);},showQuery:function(){var win=new Phi.view.window.Metadata();win.show();win.setLayer(this.parentMenu.layerName,this.parentMenu.layerTitle);},zoomToExtent:function(){Philosophy.Layer.zoomToExtent(this.parentMenu.layerName);},checkLayer:function(){var layerName=this.parentMenu.layerName;var node=this.parentMenu.node;var rowIndex=this.parentMenu.rowIndex;this.parentMenu.fireEvent('checkLayer',layerName,node,rowIndex);},showLinks:function(){var win=new Phi.view.window.Link({layer:this.parentMenu.layerName});win.show();}});﻿
Ext.ns("Phi.view.menu");Phi.view.menu.Marker=Ext.extend(Ext.menu.Menu,{initComponent:function(){var _this=this;Phi.view.menu.Marker.superclass.initComponent.call(this);this.locationMenu=_this.locationMenu();this.add({text:Philosophy.Globalization.For('Raster'),menu:_this.rasterMenu()});this.add({text:Philosophy.Globalization.For('Places'),menu:_this.placesMenu()});this.add({text:Philosophy.Globalization.For('Locations'),menu:_this.locationMenu});},staticItem:function(text,x,y,z,iconId,title,html){var i={icon:Philosophy.Marker.icons[iconId].path||Philosophy.Marker.icons['white'].path,text:text,handler:function(){Philosophy.Marker.drawMarker(x,y,iconId,null,title,html);var container=Ext.get('map');Philosophy.Map.setCenter({lon:x,lat:y,zoom:z});Philosophy.Util.popupMessage(text,'',container);}};return i;},rasterMenu:function(){var menu=new Ext.menu.Menu();menu.add(this.staticItem('Cavidad',-70.3470,-34.0842,13,'blue','Cavidad','Vuelo Cavidad'));menu.add(this.staticItem('Embalse Caren',-71.13235,-34.10939,13,'blue','Embalse Caren','Vuelo Embalse Caren'));menu.add(this.staticItem('NNM 2005 (A)',-70.50442,-34.13426,14,'blue','NNM 2005 (A)','Vuelo Nuevo Nivel Mina'));menu.add(this.staticItem('NNM 2005 (B)',-70.50150,-34.17530,13,'blue','NNM 2005 (B)','Vuelo Nuevo Nivel Mina'));menu.add(this.staticItem('Vuelo Carretera UMV 2005',-70.52808,-34.11152,14,'blue','Vuelo Carretera UMV 2005','Vuelo Carretera UMV 2005'));menu.add(this.staticItem('Vuelo Geologia 2005',-70.4601,-34.0897,13,'blue','Vuelo Geologia 2005','Vuelo Geologia 2005'));menu.add(this.staticItem('Proyecto Tranque',-70.69290,-34.28814,14,'blue','Proyecto Tranque','Vuelo Proyecto Tranque'));return menu;},placesMenu:function(){var menu=new Ext.menu.Menu();menu.add(this.staticItem('Santiago',-7864452.96509,-3954163.90966,10,'green','Santiago','Ciudad de Santiago'));return menu;},locationMenu:function(){var menu=new Ext.menu.Menu();return menu;},locationLoad:function(){var _this=this;var reader=new Ext.data.JsonReader({fields:["Id","Name","Description","Favorite","pointVO"]});var proxy=new Ext.data.HttpProxy({method:'GET',url:Philosophy.UriTemplate.getUri('locationService','locationsFavoritesByUser',Philosophy.Session.getUser())});var ds=new Ext.data.Store({reader:reader,proxy:proxy,sortInfo:{field:'Id',direction:"ASC"}});ds.on('load',function(){_this.locationMenu.removeAll();var HandlerFactory=function(point,name,desc){return function(){var container=Ext.get('map');Philosophy.Marker.drawMarker(point.lon,point.lat,'yellow',[name],name,desc);Philosophy.Map.setCenter(point);Philosophy.Util.popupMessage(name,'',container);}}
for(i=0;i<this.getCount();i++){var name=this.getAt(i).get('Name');var desc=this.getAt(i).get('Description');var pointVO=this.getAt(i).get('pointVO');var point={lat:pointVO.Lat,lon:pointVO.Lon,zoom:pointVO.Zoom};var handler=HandlerFactory(point,name,desc);var l=new Ext.menu.Item({icon:Philosophy.Marker.icons['yellow'].path,text:name,handler:handler});_this.locationMenu.add(l);}});ds.load();}});Ext.ns("Philosophy.Search");Philosophy.Search.GoogleMap=Ext.extend(Object,{getResult:function(v,parentModule){var v_split=v.split(':');window.open('http://maps.google.es/maps?f=q&hl=es&geocode=&q='+v_split[1]+',+Chile&ie=UTF8&z=13&iwloc=addr');}});Philosophy.Search.Google=Ext.extend(Object,{getResult:function(v,parentModule){var v_split=v.split(':');window.open('http://www.google.cl/search?hl=es&q='+v_split[1]);}});Philosophy.Search.Point=Ext.extend(Object,{getResult:function(v,parentModule){var c=v.split(';');var latLon=Philosophy.Map.transformPoint(c[0],c[1],'EPSG:4326','EPSG:900913');Philosophy.Map.setCenter({lon:latLon.lon,lat:latLon.lat});Philosophy.Marker.drawMarker(latLon.lon,latLon.lat,'red',null,'Input LatLon');}});Philosophy.Search.Zoom=Ext.extend(Object,{getResult:function(v,parentModule){var v_split=v.split(':');Philosophy.Map.setZoom(v_split[1]);}});Philosophy.Search.ZoomIn=Ext.extend(Object,{getResult:function(v,parentModule){Philosophy.Map.zoomIn();}});Philosophy.Search.ZoomOut=Ext.extend(Object,{getResult:function(v,parentModule){Philosophy.Map.zoomOut();}});Philosophy.Search.DrawAddress=function(address){var lonLat=new OpenLayers.LonLat(address.Longitude,address.Latitude)
lonLat.transform(new OpenLayers.Projection("EPSG:32719"),Philosophy.Map.map.getProjectionObject());var title=address.Region+'/'+address.City;var desc=[];desc.push(address.StreetType);desc.push(address.StreetName);desc.push(address.StreetNumber);desc.push('<br/>');desc.push(address.Municipality);desc=desc.join(' ');Philosophy.Marker.drawMarker(lonLat.lon,lonLat.lat,'red',[],title,desc);Philosophy.Map.map.setCenter(lonLat);};Philosophy.Search.Address=Ext.extend(Object,{parentModule:null,searchStore:null,initComponent:function(){var _this=this;this.searchStore=new Ext.data.Store({proxy:new Ext.data.ScriptTagProxy({url:Philosophy.Config.geocodingUrlBase}),baseParams:{key:Philosophy.Config.geocodingApiKey,street_number_tolerance:'50',output:'json',include_neighbors:'true'},reader:new Ext.data.JsonReader({root:'ResultSet.Result'},Ext.data.Record.create([{name:'Latitude'},{name:'Longitude'},{name:'StreetType'},{name:'StreetNumber'},{name:'StreetName'},{name:'StreetIntersection'},{name:'Municipality'},{name:'City'},{name:'Region'},{name:'RegionISO'},{name:'Country'},{name:'CountryISO'},{name:'PostalCode'},{name:'Exact'},{name:'Accuracy'},{name:'FieldsNotFound'}])),listeners:{'load':function(store,records,options){if(records.length===0)
{_this.parentModule.body.dom.innerHTML="<center style='padding-top:70px;'><font color=red><b>"+Philosophy.Globalization.For("Search Not Found")+"</b></font></center>";}
else if(records.length>0&&records[0].data.Exact=='True')
{Philosophy.Search.DrawAddress(records[0].data);_this.parentModule.body.dom.innerHTML="<center style='padding-top:70px;'><font>"+Philosophy.Globalization.For("Search Found")+" : <b>"+records[0].data.StreetName+' '+records[0].data.StreetNumber+"</b> en <b>"+records[0].data.Municipality+"</b></font></center>";}
else
{var html='<ul style="padding-left:20px; padding-top:10px;">';for(var i=0;i<records.length;i++)
{var address=records[i].data;var streetName=address.StreetName;var streetNumber=address.StreetNumber;var municipality=address.Municipality;streetName=streetName.replace(/'/,'');var action='Philosophy.Search.DrawAddress('+Ext.util.JSON.encode(address)+');';html+='<li><a  class="main_font_link" href=# onclick=\''+action+'\'>'+
streetName+' '+streetNumber;if(streetName!==''){html+=', ';}
html+=municipality+'</a></li>';}
html+='</ul>';_this.parentModule.body.dom.innerHTML=html;}
_this.parentModule.body.dom.className="main_container";_this.parentModule.doLayout();_this.parentModule.show();_this.parentModule.expand();_this.parentModule.body.highlight('#f6e8b0',{block:true});}}});},getResult:function(searchString,parentModule){this.parentModule=parentModule;this.searchStore.load({params:{location:searchString}});}});﻿
Ext.ns("Philosophy.Control");Philosophy.Control.Search=Ext.extend(Ext.form.TriggerField,{validationEvent:false,validateOnBlur:false,triggerClass:'x-form-search-trigger',width:260,emptyText:'Search with Ultramap',paramName:'query',initComponent:function(){var _this=this
Philosophy.Control.Search.superclass.initComponent.call(this);this.onTriggerClick=function(){_this.search();};this.on('specialkey',function(f,e){if(e.getKey()==e.ENTER)_this.search();});},onRender:function(){Philosophy.Control.Search.superclass.onRender.apply(this,arguments);var t=new Ext.ToolTip({target:this.el,title:'Busqueda Direcciones',width:400,html:this.createToolTipMsg(),trackMouse:true});},createToolTipMsg:function(){var html=[];html.push('Busqueda de direcciones en el servicio de Geocodificacion de Ultramap');html.push('<br/><br/>');html.push('disponible ademas los siguiente comandos:');html.push('<br/><br/>');html.push('<table width="400">');html.push('<tr><td ><b class="main_font_blue">gm:</b>[dato]</td> <td>Busqueda de direccion en Google Maps,<i> ej: gm:Alameda 132</i></td></tr>');html.push('<tr><td ><b class="main_font_blue">gs:</b>[dato]</td> <td>Busqueda de dato en Google,<i> ej: gs:GIS</i></td></tr>');html.push('<tr><td><span class="main_font_blue"><b>z-</b>,<b>z+</b>,<b>z:</b></span>[numero]</td> <td>Cambio de nivel de Zoom</td></tr>');html.push('<tr><td>[numero]<b class="main_font_blue">;</b>[numero]</td> <td>Coordenada Lon, Lat,<i> ej: -70.123;-33 </i></td></tr>');html.push('</table>');return html.join('');},search:function(){var v=this.getRawValue().trim();var match=this.searchRegExp(v);if(!match){var s=new Philosophy.Search.Address();s.initComponent();var c=Philosophy.panelSearch;s.getResult(v,c);}},searchRegExp:function(v){var regexp=[{engine:new Philosophy.Search.Point(),regex:/^(-{0,1}[0-9]*?.[0-9]*);(-{0,1}[0-9]*?.[0-9]*)$/},{engine:new Philosophy.Search.Zoom(),regex:/^z:\d$/i},{engine:new Philosophy.Search.ZoomIn(),regex:/^z\+$/i},{engine:new Philosophy.Search.ZoomOut(),regex:/^z\-$/i},{engine:new Philosophy.Search.GoogleMap(),regex:/^gm:.*$/i},{engine:new Philosophy.Search.Google(),regex:/^gs:.*$/i}];for(var i=0;i<regexp.length;i++){var regex=regexp[i].regex;var engine=regexp[i].engine;var match=regex.test(v);if(match){engine.getResult(v);return true;};};return false;}});Ext.ns("Phi.view.form");Phi.view.form.SearchLayer=Ext.extend(Ext.form.FormPanel,{labelWidth:75,frame:true,title:'',bodyStyle:'padding:5px 5px 5px 5px',labelAlign:'top',width:250,initComponent:function(){var _this=this;this.patternField=new Ext.form.TextField({fieldLabel:'Description',name:'pattern',width:120});this.comboPosition=new Phi.view.comboBox.Pattern();var fs=new Ext.form.FieldSet({title:'Search params',labelAlign:'top',autoHeight:true,layout:'column',items:[this.patternField,this.comboPosition]});var storeType=new Ext.data.SimpleStore({fields:['value','name'],data:[['%','all'],['vector','vector'],['point','point']]});this.comboType=new Ext.form.ComboBox({store:storeType,fieldLabel:Philosophy.Globalization.For('Type'),displayField:'name',valueField:'value',value:'%',mode:'local',anchor:'95%',forceSelection:true,triggerAction:'all',emptyText:Philosophy.Globalization.For('Select Operator'),selectOnFocus:true,allowBlank:false,readOnly:true});var fsOthers=new Ext.form.FieldSet({title:'Others parameters',collapsible:true,collapsed:true,autoHeight:true,defaults:{anchor:'95%',allowBlank:true},items:[this.comboType]});this.items=[fs,fsOthers];Phi.view.form.SearchLayer.superclass.initComponent.call(this);},getParams:function(){var pattern=this.patternField.getValue();var position=this.comboPosition.getValue();var type=this.comboType.getValue();var params={pattern:pattern,position:position,type:type};return params;}});Ext.ns('Phi.view.toolbar');Phi.view.toolbar.MainToolbar=Ext.extend(Ext.Toolbar,{initComponent:function(){var _this=this;this.searchField=new Philosophy.Control.Search();this.markerMenu=this.markerMenu();this.projMenu=this.projMenu();this.baseLayerCombo=new Phi.view.comboBox.BaseLayer();this.alphaSlider=new Phi.view.slider.BaseLayer();Phi.view.toolbar.MainToolbar.superclass.initComponent.call(this);this.add(this.searchField);this.add(this.markerMenu);this.add('-');this.add(this.projMenu);this.add(this.baseLayerCombo);this.add(' ');this.add(' ');this.add(this.alphaSlider);this.add(' ');this.add({iconCls:'icon-grid',enableToggle:true,tooltip:{title:'Grilla',text:'Muestra/Esconde grilla de coordenadas <br/>sobre el mapa'},handler:function(){var v=!Philosophy.Map.graticule.gratLayer.getVisibility();Philosophy.Map.graticule.gratLayer.setVisibility(v);}});this.add({xtype:'tbfill'});this.add([{tooltip:{title:'Kml',text:'Dibujar KML simples en el mapa'},iconCls:'icon-kml',handler:function(){var win=new Phi.view.window.KMLUpload();win.show(this);}},{tooltip:{title:'Archivo Coordenada',text:'Dibujar archivo de coordenadas <br/>( txt, xls, xlsx) en el mapa'},iconCls:'icon-google-marker',handler:function(){var win=new Phi.view.window.DrawCoordinate();win.show(this);}},{tooltip:{title:'Transformar',text:'Transformar archivo de coordenadas <br/>(txt, xls, xlsx) en diferentes proyecciones'},iconCls:'icon-transform',handler:function(){var win=new Phi.view.window.ConvertCoordinate();win.show(this);}},{tooltip:{title:'Exportar',text:'Exportar las capas geometricas <br /> en diferentes formatos (KML, PDF, SHAPE, Etc..)'},iconCls:'icon-print',handler:function(){var win=new Phi.view.window.FormExport();win.show(this);}},'-',{tooltip:{title:'Manual',text:'Manual de Usuario, descripcion de los detalles'},iconCls:'icon-book',handler:function(){window.open('manual.pdf','GIS - Manual','width=800,height=600,resizable=yes,scrollbars=yes ')}},{tooltip:{title:'FAQ',text:'Preguntas Frecuentes'},iconCls:'icon-help',handler:function(){window.open('faq.htm','GIS - FAQ','width=800,height=600,resizable=yes,scrollbars=yes ')}},'-',{text:Philosophy.Globalization.For('Control Panel'),tooltip:{title:'Panel de Control',text:'Herramienta de configuracion como:, <br/> datos personales, Administracion, etc..'},iconCls:'icon-control-panel',handler:function(){var win=new Phi.view.window.ControlPanel();win.show(this);}},{text:Philosophy.Globalization.For('LogOut'),tooltip:{title:'LogOut',text:'Cerrar sesion actual'},iconCls:'icon-key',handler:function(){Ext.MessageBox.show({title:Philosophy.Globalization.For('Logout'),msg:Philosophy.Globalization.For('Are you sure ?'),animEl:'logOut',buttons:Ext.MessageBox.YESNO,fn:function(btn,text){if(btn=='yes'){_this.logOut();}}});}}]);},load:function(){this.loadFavorites();this.baseLayerCombo.loadBaseLayers();},markerMenu:function(){this.menu=new Phi.view.menu.Marker();var markerMenu={iconCls:'icon-group-locations',tooltip:{title:'Favoritos',text:'Aceso rapido a: <br/> Raster, Lugares y Localidades favoritas'},text:'',menu:this.menu};return markerMenu;},loadFavorites:function(){this.menu.locationLoad();},projMenu:function(){var projItem=function(checked,text,projection){return{checked:checked,group:'proj',text:text,handler:function(){Philosophy.Map.setDisplayProjection(projection);}}};var menu=new Ext.menu.Menu();menu.add(projItem(false,'EPSG:4326 - (WGS 84)','EPSG:4326'));menu.add('-');menu.add(projItem(true,'EPSG:32719 - (WGS 84 / UTM zone 19S)','EPSG:32719'));menu.add(projItem(false,'EPSG:24819 - (PSAD56 / UTM zone 19S)','EPSG:24819'));menu.add(projItem(true,'EPSG:31994 - (SIRGAS / UTM zone 19S)','EPSG:31994'));menu.add(projItem(false,'EPSG:29189 - (SAD69 / UTM zone 19S)','EPSG:29189'));menu.add('-');menu.add(projItem(false,'Web Spherical Mercator','EPSG:900913'));var projMenu={iconCls:'icon-projection',text:Philosophy.Globalization.For('Projections'),tooltip:{title:'Projecciones',text:'Listado de proyecciones disponibles',trackMouse:true},menu:menu};return projMenu;},logOut:function(){Philosophy.Session.setUser(null);var formLogin=new Phi.view.window.FormLogin();formLogin.show(this);formLogin.getEl().fadeIn({duration:1});}});Ext.ns("Phi.view.panel");Phi.view.panel.User=Ext.extend(Ext.Panel,{border:false,layout:'fit',collapsible:true,collapsed:true,plugins:[Ext.ux.plugins.ToggleCollapsible],title:Philosophy.Globalization.For('My Profile'),bodyStyle:'padding:25px',initComponent:function(){Phi.view.panel.User.superclass.initComponent.call(this);},load:function(){var _this=this;var option=Philosophy.Session.getUser()+'/json';var lblUserName=Philosophy.Globalization.For('UserName');var lblName=Philosophy.Globalization.For('Name');var lblEmail=Philosophy.Globalization.For('Email');Ext.Ajax.request({waitMsg:'Wait',url:Philosophy.UriTemplate.getUri('userService','user',option),success:function(response,options){var userVO=Ext.util.JSON.decode(response.responseText);var tpl=new Ext.XTemplate('<div class="main_container">','<table cellpadding="0" cellspacing="0">','<tr><td width="80"><b>'+lblUserName+'</b>:</td><td class="main_font_link" onclick="Philosophy.panelUser.showFormUser();">{UserName}</td></tr>','<tr><td><b>'+lblName+'</b>:</td><td class="main_font">{Name}&nbsp;{LastName}</td></tr>','<tr><td><b>'+lblEmail+'</b>:</td><td class="main_font">{Email}</td></tr>','</table>','<br/>','<tpl for="RolesVO"><b>{Name}</b><br/><span class="main_font">{Description}</span><br/><br/></tpl>','</div>');tpl.overwrite(_this.body,userVO);_this.body.highlight('#f6e8b0',{block:true});},failure:function(response,options){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Problem in call'));}});},showFormUser:function(){var _this=this;var userName=Philosophy.Session.getUser();var win=new Phi.view.window.FormUser({height:300,create:false,opener:_this,x:100,y:100});win.show(this);win.readEntity(userName);win.getEl().fadeIn({duration:1});}});Ext.ns("Phi.view.panel");Phi.view.panel.Layer=Ext.extend(Ext.Panel,{border:false,layout:'fit',collapsible:true,plugins:[Ext.ux.plugins.ToggleCollapsible],title:Philosophy.Globalization.For('Layers'),initComponent:function(){var _this=this;var tbar=new Ext.Toolbar({items:[{text:Philosophy.Globalization.For('Search'),iconCls:'icon-search-list',tooltip:{title:Philosophy.Globalization.For('Search'),text:Philosophy.Globalization.For('Search Desc')},handler:function(){_this.showSearch()}},{xtype:'tbfill'},{text:Philosophy.Globalization.For('Apply'),tooltip:{title:Philosophy.Globalization.For('Apply'),text:Philosophy.Globalization.For('Apply Desc')},iconCls:'icon-accept',handler:function(){_this.applyChanges();}}]});var root=new Ext.tree.TreeNode({children:Philosophy.Layer.Data});this.root=root;var treeLoader=new Ext.tree.TreeLoader({preloadChildren:true}).doPreload(root);var layerContextMenu=new Phi.view.menu.Layer({enableCheckLayer:true});layerContextMenu.on('checkLayer',function(layerName,node){_this.uncheckAll();node.attributes.checked=true;node.ui.toggleCheck(true);});this.treeLayer=new Ext.tree.TreePanel({tbar:tbar,title:Philosophy.Globalization.For('Layers'),animate:true,enableDD:false,border:true,autoScroll:true,rootVisible:false,contextMenu:layerContextMenu,containerScroll:true,root:root});this.treeLayer.on('contextmenu',function(node,e){if(node.isLeaf()){node.select();layerContextMenu.layerName=node.attributes.layerId;layerContextMenu.node=node;var c=node.getOwnerTree().contextMenu;c.contextNode=node;c.showAt(e.getXY());}});this.treeLayer.on('checkchange',function(n,checked){if(n.hasChildNodes()){n.expand();n.eachChild(function(c){c.ui.toggleCheck(checked);c.fireEvent('checkchange',c,checked);});}});this.panelResume=new Phi.view.panel.ResumeLayer();this.tabPanel=new Ext.TabPanel({activeTab:0,deferredRender:false,width:600,height:250,plain:true,defaults:{autoScroll:true},items:[this.treeLayer,this.panelResume]});this.items=[this.tabPanel];Phi.view.panel.Layer.superclass.initComponent.call(this);},showResume:function(){this.tabPanel.activate(this.panelResume);},applyChanges:function(){var layers=this.getCheckedLayers();if(layers.length<1){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Select at least one layer'));return;}
var container=Ext.get('map');Philosophy.Util.popupMessage(Philosophy.Globalization.For('Apply msg'),'',container);Philosophy.Layer.apliedLayers=layers;Philosophy.Map.redrawMainLayer(Philosophy.Layer.getWMSLayers(Philosophy.Config.wmsNameSpace));this.panelResume.update();this.showResume()},getCheckedLayers:function(){var layers=this.treeLayer.getChecked('layerId','text');return layers;},uncheckAll:function(){var startNode=this.treeLayer.root;var f=function(){if(this.attributes.checked){this.attributes.checked=false;this.ui.toggleCheck(false);}}
startNode.cascade(f);},checkNodeByLayerId:function(layerId){var startNode=this.treeLayer.root;t=this.treeLayer;var f=function(){if(this.attributes.layerId==layerId){this.attributes.checked==true;this.ui.toggleCheck(true);}}
startNode.cascade(f);},collapseAll:function(){this.treeLayer.collapseAll();},showSearch:function(){var win=new Phi.view.window.SearchLayer();win.show();},searchNode:function(id){var startNode=this.treeLayer.root;t=this.treeLayer;var f=function(){if(this.attributes.Id==id){var n=this;this.ensureVisible(function(){var m=t.getNodeById(n.id);var el=Ext.fly(m.getUI().getEl());el.highlight("ffff9c",{duration:3});});}}
startNode.cascade(f);},searchNodeByLayer:function(layerId){var startNode=this.treeLayer.root;t=this.treeLayer;var f=function(){if(this.attributes.layerId==layerId){var n=this;this.ensureVisible(function(){var m=t.getNodeById(n.id);var el=Ext.fly(m.getUI().getEl());el.highlight("ffff9c",{duration:3});});}}
startNode.cascade(f);}});Ext.override(Ext.tree.TreePanel,{getChecked:function(aname,atitle,startNode){startNode=startNode||this.root;var r=[];var f=function(){if(this.attributes.checked&&this.isLeaf()){var nodeName=this.attributes[aname];var nodeTitle=this.attributes[atitle];var layer={'name':nodeName,'title':nodeTitle};r.push(layer);}}
startNode.cascade(f);return r;}});Ext.ns("Phi.view.panel");Phi.view.panel.WorkSpace=Ext.extend(Ext.Panel,{border:false,layout:'fit',collapsible:true,plugins:[Ext.ux.plugins.ToggleCollapsible],title:Philosophy.Globalization.For('WorkSpace')+'<em class="main_font_color"> new</em>',initComponent:function(){var _this=this;var reader=new Ext.data.JsonReader({root:'List',totalProperty:'Total',fields:["Id","Name","BaseLayer","Layers","Public","pointVO"]});var proxy=new Ext.data.HttpProxy({method:'GET',url:Philosophy.UriTemplate.getUri('workspaceService','workspacesByUser','')});var ds=new Ext.data.Store({reader:reader,proxy:proxy,sortInfo:{field:'Id',direction:"ASC"}});var render=function(val,m,record){var p=record.get("Public");return p?'<img src="content/images/Icons/cup.png" />':'<img src="content/images/Icons/cup_key.png" />';};var cm=new Ext.grid.ColumnModel([{header:'',width:25,dataIndex:'Id',renderer:render},{header:Philosophy.Globalization.For('Name'),width:250,sortable:true,dataIndex:'Name'}]);var tbar=new Ext.Toolbar({items:[{iconCls:'icon-workspace-add',text:Philosophy.Globalization.For('Add'),tooltip:Philosophy.Globalization.For('Add'),handler:function(){_this.addEntity();}},{iconCls:'icon-workspace-edit',text:Philosophy.Globalization.For('Edit'),tooltip:Philosophy.Globalization.For('Edit'),handler:function(){_this.showFormWorkSpace();}},{xtype:'tbfill'},{iconCls:'icon-delete',text:Philosophy.Globalization.For('Delete'),tooltip:Philosophy.Globalization.For('Delete'),handler:function(){Ext.Msg.confirm(Philosophy.Globalization.For('Delete'),Philosophy.Globalization.For('Are you sure ?'),function(btn,text){if(btn=='yes'){_this.deleteEntity();}});}},{text:Philosophy.Globalization.For('Search'),iconCls:'icon-search-list',tooltip:Philosophy.Globalization.For('Search'),handler:function(){var win=new Phi.view.window.SearchWorkSpace();win.show();win.getEl().fadeIn({duration:1});}}]});var pagingToolbar=new Ext.PagingToolbar({store:ds,pageSize:8,displayInfo:true,displayMsg:'{0} - {1} of {2}',emptyMsg:Philosophy.Globalization.For('Empty')});var view=new Ext.grid.GridView({forceFit:false,enableRowBody:true,ignoreAdd:true,emptyText:Philosophy.Globalization.For('Empty')});this.grid=new Ext.grid.GridPanel({title:'',width:345,autoHeight:true,frame:true,ds:ds,cm:cm,view:view,tbar:tbar,bbar:pagingToolbar,listeners:{rowdblclick:function(grid,row){_this.setWorkSpace();}}});function onGridContextMenu(grid,rowIndex,e){e.stopEvent();var coords=e.getXY();_this.rowIndex=rowIndex;grid.getSelectionModel().clearSelections();grid.getSelectionModel().selectRow(rowIndex);gridContextMenu.showAt([coords[0],coords[1]]);}
this.grid.addListener('rowcontextmenu',onGridContextMenu);var gridContextMenu=new Ext.menu.Menu({items:[{iconCls:'icon-workspace-edit',text:Philosophy.Globalization.For('Edit'),handler:function(){_this.showFormWorkSpace();}},{iconCls:'icon-delete',text:Philosophy.Globalization.For('Delete'),handler:function(){_this.deleteEntity();}},{iconCls:'icon-lock',text:Philosophy.Globalization.For('Private'),handler:function(){_this.setPublic();}}]});Phi.view.panel.WorkSpace.superclass.initComponent.call(this);this.add(this.grid);},setPublic:function(){var _this=this;var s=this.getSelections();var id=s[0].data.Id;var p=s[0].data.Public;var workspaceVO=({Id:id,Public:!p});Ext.Ajax.request({waitMsg:Philosophy.Globalization.For('Wait...'),url:Philosophy.UriTemplate.getUri('workspaceService','workspacePublic'),method:'PUT',headers:{'Content-Type':'text/json'},jsonData:workspaceVO,failure:function(response,options){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Problem in call'));},success:function(response,options){_this.reload();}});},addEntity:function(){var win=new Phi.view.window.FormWorkSpace({create:true,x:100,y:100});win.show();},deleteEntity:function(){var _this=this;var s=this.getSelections();if(s.length<1){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Select One'));return false;}
var id=s[0].data.Id;Ext.Ajax.request({waitMsg:'Wait..',url:Philosophy.UriTemplate.getUri('workspaceService','workspace',id),method:'DELETE',failure:function(response,options){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Problem in call'));},success:function(response,options){_this.load();}});},showFormWorkSpace:function(){var s=this.getSelections();if(s.length<1){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Select One'));return false;}
var id=s[0].data.Id;var win=new Phi.view.window.FormWorkSpace({create:false});win.show();win.readEntity(id);win.getEl().fadeIn({duration:1});},setWorkSpace:function(){var s=this.getSelections();if(s.length<1){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Select One'));return false;}
var panelLayer=Philosophy.panelLayer;panelLayer.uncheckAll();var l=s[0].data.Layers.split(',');if(l.length>0){for(x=0;x<l.length;x++)
panelLayer.checkNodeByLayerId(l[x]);panelLayer.applyChanges();}
var baseLayer=s[0].data.BaseLayer;if(baseLayer){Philosophy.mainToolbar.baseLayerCombo.setValue(baseLayer);Philosophy.mainToolbar.baseLayerCombo.setBaseLayerByName(baseLayer);};var pointVO=s[0].data.pointVO;var point={lon:pointVO.Lon,lat:pointVO.Lat,zoom:pointVO.Zoom};Philosophy.Map.setCenter(point);},load:function(){var userName=Philosophy.Session.getUser();this.grid.baseParams={userName:userName};this.grid.store.load({params:{userName:userName,start:0,limit:8}});},reload:function(){this.grid.store.reload();},getSelections:function(){var sm=this.grid.getSelectionModel();return sm.getSelections();}});Ext.ns("Phi.view.panel");Phi.view.panel.Location=Ext.extend(Ext.Panel,{border:false,layout:'fit',collapsible:true,plugins:[Ext.ux.plugins.ToggleCollapsible],title:Philosophy.Globalization.For('Locations'),initComponent:function(){var _this=this;var reader=new Ext.data.JsonReader({root:'List',totalProperty:'Total',fields:["Id","Name","Description","Favorite","pointVO"]});var proxy=new Ext.data.HttpProxy({method:'GET',url:Philosophy.UriTemplate.getUri('locationService','locationsByUser','')});var ds=new Ext.data.Store({reader:reader,proxy:proxy,sortInfo:{field:'Id',direction:"ASC"}});ds.on('beforeload',function(store,options){var option=Philosophy.Session.getUser();var url=Philosophy.UriTemplate.getUri('locationService','locationsByUser',option)
store.proxy.conn.url=url;});var renderImage=function(val,m,record){var f=record.get("Favorite");return f?'<img src="content/images/Markers/pushpinyellow_mini.png" />':'<img src="content/images/Markers/pushpin_mini.png" />';};var cm=new Ext.grid.ColumnModel([{header:'',width:25,dataIndex:'Id',renderer:renderImage},{header:Philosophy.Globalization.For('Name'),width:250,sortable:true,dataIndex:'Name'}]);var tbar=new Ext.Toolbar({items:[{iconCls:'icon-location-add',text:Philosophy.Globalization.For('Add'),tooltip:Philosophy.Globalization.For('Add'),handler:function(){_this.addLocation();}},{iconCls:'icon-location-edit',text:Philosophy.Globalization.For('Edit'),tooltip:Philosophy.Globalization.For('Edit'),handler:function(){_this.showFormLocation();}},{xtype:'tbfill'},{iconCls:'icon-delete',text:Philosophy.Globalization.For('Delete'),tooltip:Philosophy.Globalization.For('Delete'),handler:function(){Ext.Msg.confirm(Philosophy.Globalization.For('Delete'),Philosophy.Globalization.For('Are you sure ?'),function(btn,text){if(btn=='yes'){_this.deleteLocation();}});}}]});var pagingToolbar=new Ext.PagingToolbar({store:ds,pageSize:8,displayInfo:true,displayMsg:'{0} - {1} of {2}',emptyMsg:Philosophy.Globalization.For('Empty')});var view=new Ext.grid.GridView({forceFit:false,enableRowBody:true,ignoreAdd:true,emptyText:Philosophy.Globalization.For('Empty')});var gridLocation=new Ext.grid.GridPanel({title:'',width:345,autoHeight:true,frame:true,ds:ds,cm:cm,view:view,tbar:tbar,bbar:pagingToolbar,listeners:{rowdblclick:function(grid,row){_this.setLocation();}}});function onGridContextMenu(grid,rowIndex,e){e.stopEvent();var coords=e.getXY();_this.rowIndex=rowIndex;grid.getSelectionModel().clearSelections();grid.getSelectionModel().selectRow(rowIndex);gridContextMenu.showAt([coords[0],coords[1]]);}
gridLocation.addListener('rowcontextmenu',onGridContextMenu);var gridContextMenu=new Ext.menu.Menu({items:[{iconCls:'icon-location-edit',text:Philosophy.Globalization.For('Edit'),handler:function(){_this.showFormLocation();}},{iconCls:'icon-delete',text:Philosophy.Globalization.For('Delete'),handler:function(){_this.deleteLocation();}},{iconCls:'icon-favorite',text:Philosophy.Globalization.For('Favorite'),handler:function(){_this.favorite();}}]});Phi.view.panel.Location.superclass.initComponent.call(this);this.add(gridLocation);this._grid=gridLocation;},favorite:function(){var _this=this;var selections=_this.getSelections();var id=selections[0].data.Id;var favorite=selections[0].data.Favorite;var locationVO=({Id:id,Favorite:!favorite});Ext.Ajax.request({waitMsg:Philosophy.Globalization.For('Wait...'),url:Philosophy.UriTemplate.getUri('locationService','locationFavorite'),method:'PUT',headers:{'Content-Type':'text/json'},jsonData:locationVO,failure:function(response,options){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Problem in call'));},success:function(response,options){Philosophy.mainToolbar.loadFavorites();_this.reload();}});},addLocation:function(){var container=Ext.get('map');Philosophy.Util.popupMessage('',Philosophy.Globalization.For('Click on map'),container);Philosophy.Map.deactivateAllControls();Philosophy.Map.activateCustomControl('click_add_location');},deleteLocation:function(){var _this=this;var selections=_this.getSelections();if(selections.length<1){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Select One'));return false;}
var id=selections[0].data.Id;Ext.Ajax.request({waitMsg:'Wait..',url:Philosophy.UriTemplate.getUri('locationService','location',id),method:'DELETE',failure:function(response,options){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Problem in call'));},success:function(response,options){Philosophy.mainToolbar.loadFavorites();_this.load();}});},showFormLocation:function(){var _this=this;var selections=_this.getSelections();if(selections.length<1){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Select One'));return false;}
var id=selections[0].data.Id;var win=new Phi.view.window.FormLocation({create:false,opener:_this});win.show(this);win.readEntity(id);win.getEl().fadeIn({duration:1});},setLocation:function(){var _this=this;var selections=_this.getSelections();var name=selections[0].data.Name;var desc=selections[0].data.Description;var favorite=selections[0].data.Favorite;var pointVO=selections[0].data.pointVO;var point={lon:pointVO.Lon,lat:pointVO.Lat,zoom:pointVO.Zoom};var color=favorite?'yellow':'white';Philosophy.Marker.drawMarker(pointVO.Lon,pointVO.Lat,color,[name],name,desc);var container=Ext.get('map');Philosophy.Map.setCenter(point);Philosophy.Util.popupMessage(name,'',container);},load:function(){var gridList=this._grid;gridList.store.load({params:{start:0,limit:8}});},reload:function(){var gridList=this._grid;gridList.store.reload();},getSelections:function(){var gridList=this._grid;var sm=gridList.getSelectionModel();return sm.getSelections();}});Ext.ns("Phi.view.panel");var MEASURE=Philosophy.Globalization.For('Measure');var VECTOR=Philosophy.Globalization.For('Vector');var ALPHA=Philosophy.Globalization.For('Alpha');Phi.view.panel.MenuPanel=Ext.extend(Ext.DataView,{autoHeight:true,frame:true,multiSelect:false,singleSelect:true,overClass:'over',selectedClass:'selected',itemSelector:'dd',tpl:new Ext.XTemplate('<div id="menu_map-ct">','<tpl for=".">','<div class="collapsed">','<h2><div>{title}','<tpl if="this.isType(title,MEASURE)">','<span id="measure_output"></span>','</tpl>','</div></h2>','<dl>','<tpl for="app">','<dd ext:control="{control}" ext:action="{action}" >','<img src="{icon}" title="{tooltip}" ></img>','</dd>','</tpl>','<div style="clear:left"></div>','</dl>','</div>','</tpl>','</div>',{isType:function(title,type){if(title==type){return true;}}}),onClick:function(e){var _this=this;var group=e.getTarget('h2',3,true);if(group){group.up('div').toggleClass('collapsed');}else{var t=e.getTarget('dd',5,true);if(t){var action=t.getAttributeNS('ext','action');var control=t.getAttributeNS('ext','control');Philosophy.Map.deactivateAllControls();switch(action){case"navigation":switch(control){case"zoomIn":Philosophy.Map.zoomIn();break
case"zoomOut":Philosophy.Map.zoomOut();break;}
break;case"color":var win=new Phi.view.window.colorPicker({x:100,y:100});win.show(this);break;case"vector":Philosophy.Map.activateVectorControl(control);break;case"vectorClear":Ext.MessageBox.show({title:'',msg:Philosophy.Globalization.For('Clear already draw geometries ?'),buttons:Ext.MessageBox.YESNO,fn:function(btn,text){if(btn=='yes'){Philosophy.Map.vectorLayer.destroyFeatures();}}});break;case"measure":Philosophy.Map.activateMeasureControl(control);break;case"custom":Philosophy.Map.activateCustomControl(control);break;case"legend":var zoom=Philosophy.Map.map.getZoom();win=new Phi.view.window.Legend({zoom:zoom});win.show(this);break;case"query":win=new Phi.view.window.Metadata();win.show(this);break;}}}
return Phi.view.window.MenuPanel.superclass.onClick.apply(this,arguments);}});Phi.view.panel.Map=Ext.extend(Ext.Panel,{border:false,collapsible:true,plugins:[Ext.ux.plugins.ToggleCollapsible],title:Philosophy.Globalization.For('Tools'),layout:'fit',winLegend:null,initComponent:function(){var _this=this;var menuData=[{title:Philosophy.Globalization.For('Navigation'),app:[{action:'navigation',control:'zoomIn',icon:'content/images/MenuIcons/zoom_in.png',tooltip:Philosophy.Globalization.For('Zoom In')},{action:'navigation',control:'zoomOut',icon:'content/images/MenuIcons/zoom_out.png',tooltip:Philosophy.Globalization.For('Zoom Out')},{icon:'content/images/MenuIcons/pan_off.png',tooltip:Philosophy.Globalization.For('Hand')}]},{title:Philosophy.Globalization.For('Vector'),app:[{action:'color',icon:'content/images/MenuIcons/color.png',tooltip:Philosophy.Globalization.For('Color Selection')},{action:'vector',control:'point',icon:'content/images/MenuIcons/draw_point_off.png',tooltip:Philosophy.Globalization.For('Point')},{action:'vector',control:'line',icon:'content/images/MenuIcons/draw_line_off.png',tooltip:Philosophy.Globalization.For('Polyline')},{action:'vector',control:'polygon',icon:'content/images/MenuIcons/draw_polygon_off.png',tooltip:Philosophy.Globalization.For('Polygon')},{action:'vector',control:'regular',icon:'content/images/MenuIcons/regular.png',tooltip:Philosophy.Globalization.For('Regular Polygon')},{action:'vector',control:'drag',icon:'content/images/MenuIcons/move_feature_off.png',tooltip:Philosophy.Globalization.For('Drag Polygon')},{action:'vector',control:'modify',icon:'content/images/MenuIcons/modify.png',tooltip:Philosophy.Globalization.For('Modify Polygon')},{action:'vector',control:'del',icon:'content/images/MenuIcons/delete.png',tooltip:Philosophy.Globalization.For('Delete Polygon')},{action:'vectorClear',icon:'content/images/MenuIcons/delete_all.png',tooltip:Philosophy.Globalization.For('Clear All')}]},{title:Philosophy.Globalization.For('Query'),app:[{action:'query',icon:'content/images/MenuIcons/sql.png',tooltip:Philosophy.Globalization.For('Query')},{action:'custom',control:'click_layer_info',icon:'content/images/MenuIcons/click.png',tooltip:Philosophy.Globalization.For('Layer Information')},{action:'custom',control:'click_point_info',icon:'content/images/MenuIcons/point_click.png',tooltip:Philosophy.Globalization.For('Point coordinates')},{action:'custom',control:'box_bound_info',icon:'content/images/MenuIcons/box.png',tooltip:Philosophy.Globalization.For('Box coordinates')}]}];var store=new Ext.data.JsonStore({fields:['title','app'],data:menuData});var menuPanel=new Phi.view.panel.MenuPanel({store:store});this.items=menuPanel;Phi.view.panel.Map.superclass.initComponent.call(this);}});Ext.ns("Phi.view.panel");Phi.view.panel.Search=Ext.extend(Ext.Panel,{title:Philosophy.Globalization.For('Search'),layout:'fit',border:false,collapsible:true,autoscroll:true,plugins:[Ext.ux.plugins.ToggleCollapsible],searchEngine:Philosophy.SearchEngines,initComponent:function(){var _this=this;var tbar=new Ext.Toolbar({items:[{xtype:'tbfill'},{iconCls:'icon-clear',text:Philosophy.Globalization.For('Clear'),tooltip:Philosophy.Globalization.For('Clear'),handler:function(){_this.clear();}}]});this.tbar=tbar;Phi.view.panel.Search.superclass.initComponent.call(this);},clear:function(){this.body.dom.innerHTML="";this.body.dom.className="main_container";this.doLayout();this.body.highlight('#f6e8b0',{block:true});}});Ext.ns("Phi.view.panel");Phi.view.panel.ResumeLayer=Ext.extend(Ext.Panel,{title:Philosophy.Globalization.For('Layer Resume'),layout:'fit',initComponent:function(){var _this=this;this.tbar=new Ext.Toolbar({items:[{text:Philosophy.Globalization.For('Search'),iconCls:'icon-search-list',tooltip:{title:Philosophy.Globalization.For('Search'),text:Philosophy.Globalization.For('Search Desc')},handler:function(){Philosophy.panelLayer.showSearch()}}]});var store=new Ext.data.JsonStore({idProperty:'name',fields:['name','title']});var dd=new Ext.ux.dd.GridDragDropRowOrder({copy:false,scrollable:true});dd.on('afterrowmove',function(){_this.apply();});this.grid=new Ext.grid.GridPanel({store:store,enableDragDrop:true,ddGroup:'GridDD',plugins:[dd],columns:[{header:'',width:30,sortable:false,renderer:_this.renderLegend,dataIndex:'name'},{header:Philosophy.Globalization.For('layers'),width:240,sortable:true,dataIndex:'title'}]});this.grid.on('sortchange',function(){_this.apply();});function onGridContextMenu(grid,rowIndex,e){e.stopEvent();var coords=e.getXY();_this.layerContextMenu.showAt([coords[0],coords[1]]);_this.grid.getSelectionModel().clearSelections();_this.grid.getSelectionModel().selectRow(rowIndex);var layerName=_this.getlayerNameFromSelection();_this.layerContextMenu.layerName=layerName;}
this.grid.addListener('rowcontextmenu',onGridContextMenu);this.layerContextMenu=new Phi.view.menu.Layer();this.items=[this.grid];Phi.view.panel.ResumeLayer.superclass.initComponent.call(this);this.update();},update:function(){this.grid.store.loadData(Philosophy.Layer.apliedLayers);},renderLegend:function(val,m,record){var src=Philosophy.Config.wmsLegend+'cc:'+val.split('.')[1];return'<img src="'+src+'" style="border:1px solid #ccc;" />';},getlayerNameFromSelection:function(){var selections=this.grid.getSelectionModel().getSelections();return selections[0].data.name;},getlayersFromStore:function(){var _this=this;var layers=[];for(var i=0,len=_this.grid.store.getTotalCount();i<len;i++){var r=_this.grid.store.getAt(i);var name=r.get('name');var title=r.get('title');var layer={'name':name,'title':title};layers.push(layer);}
return layers;},apply:function(){var _this=this;var layers=_this.getlayersFromStore();var container=Ext.get('map');Philosophy.Util.popupMessage(Philosophy.Globalization.For('Updating...'),'',container);Philosophy.Layer.apliedLayers=layers;Philosophy.Map.redrawMainLayer(Philosophy.Layer.getWMSLayers(Philosophy.Config.wmsNameSpace));}});﻿
Ext.ns("Phi.view.window");Phi.view.window.colorPicker=Ext.extend(Ext.Window,{title:'Color',width:370,height:300,closeAction:'close',maximizable:false,modal:true,plain:true,layout:'border',colorPicker:null,initComponent:function(){var _this=this;var colorPicker=new Ext.ux.ColorPicker({region:'center',title:'ColorPanel',collapsible:false});this.buttons=[{text:Philosophy.Globalization.For('Submit'),handler:function(){var hColor='#'+colorPicker.getHex();var style={strokeColor:hColor,fillColor:hColor,fillOpacity:0.5,strokeOpacity:1,strokeWidth:1,pointRadius:4};Philosophy.Map.setVectorColor(style);_this.close();}},{text:Philosophy.Globalization.For('Cancel'),handler:function(){_this.close();}}];this.items=colorPicker;_this.colorPicker=colorPicker;Phi.view.window.colorPicker.superclass.initComponent.call(this);}});Ext.ns("Phi.view.window");Phi.view.window.MenuPanel=Ext.extend(Ext.DataView,{autoHeight:true,frame:true,overClass:'over',itemSelector:'dd',tpl:new Ext.XTemplate('<div id="menu-ct">','<tpl for=".">','<div class="collapsed">','<h2><div>{title}</div></h2>','<dl>','<tpl for="app">','<dd ext:action="{action}"><img src="{icon}"/>','<div><h4>{text}</h4><p>{desc}</p></div>','</dd>','</tpl>','<div style="clear:left"></div>','</dl>','</div>','</tpl>','</div>'),onClick:function(e){var group=e.getTarget('h2',3,true);if(group){group.up('div').toggleClass('collapsed');}else{var t=e.getTarget('dd',5,true);if(t){var action=t.getAttributeNS('ext','action');var win;switch(action){case"userProfile":win=new Phi.view.window.FormUser({height:300,create:false,opener:Philosophy.panelUser,x:100,y:100});win.show(this);win.readEntity(Philosophy.Session.getUser());break;case"userPassword":var userName=Philosophy.Session.getUser();win=new Phi.view.window.FormPassword({userName:userName});win.show(this);break;case"userAdmin":win=new Phi.view.window.MantainerUser();win.show(this);break;case"application":win=new Phi.view.window.formAppSettings();win.show(this);var cfg=Philosophy.Util.getAppCfg();win.setValues(cfg);break;case"drawCoordinates":var win=new Phi.view.window.DrawCoordinate();win.show(this);break;case"KMLUploadFile":var win=new Phi.view.window.KMLUpload();win.show(this);break;case"convertCoordinate":var win=new Phi.view.window.ConvertCoordinate();win.show(this);break;}}}
return Phi.view.window.MenuPanel.superclass.onClick.apply(this,arguments);}});Phi.view.window.ControlPanel=Ext.extend(Ext.Window,{closeAction:'close',title:Philosophy.Globalization.For('Control Panel'),iconCls:'icon-control-panel',maximizable:false,modal:true,width:680,height:500,autoScroll:true,html:'<div style="background:#ffffff; height:100%"></div>',initComponent:function(){var _this=this;var menuData=[{title:Philosophy.Globalization.For('Personal'),app:[{text:Philosophy.Globalization.For('Profile Information'),action:'userProfile',icon:'content/images/temp_img.gif',desc:Philosophy.Globalization.For('Profiledesc')},{text:Philosophy.Globalization.For('Password'),action:'userPassword',icon:'content/images/temp_img_b.gif',desc:Philosophy.Globalization.For('Passworddesc')}]},{title:Philosophy.Globalization.For('Administration'),app:[{text:Philosophy.Globalization.For('User Administration'),action:'userAdmin',icon:'content/images/admin.gif',desc:Philosophy.Globalization.For('UserAdmindesc')},{text:Philosophy.Globalization.For('Application Settings'),action:'application',icon:'content/images/temp_img_b.gif',desc:Philosophy.Globalization.For('AppAdmindesc')}]},{title:Philosophy.Globalization.For('Upload Manager'),app:[{text:Philosophy.Globalization.For('Draw Coordinates')+'<em class="main_font_color"> new</em>',action:'drawCoordinates',icon:'content/images/draw_points.gif',desc:Philosophy.Globalization.For('UploadFiledesc')},{text:Philosophy.Globalization.For('KML Upload')+'<em class="main_font_color"> new</em>',action:'KMLUploadFile',icon:'content/images/kml_img.png',desc:Philosophy.Globalization.For('KMLFiledesc')},{text:Philosophy.Globalization.For('Convert Coordinates')+'<em class="main_font_color"> new</em>',action:'convertCoordinate',icon:'content/images/convert_file.png',desc:Philosophy.Globalization.For('TransformFiledesc')}]}];var store=new Ext.data.JsonStore({idProperty:'id',fields:['id','title','app'],data:menuData});this.items=new Phi.view.window.MenuPanel({store:store});this.buttons=[{text:Philosophy.Globalization.For('Close'),handler:function(){_this.close();}}];Phi.view.window.ControlPanel.superclass.initComponent.call(this);}});﻿
Ext.ns("Phi.view.window");Phi.view.window.FormWorkSpace=Ext.extend(Ext.Window,{title:Philosophy.Globalization.For('WorkSpace Detail'),width:400,height:270,closeAction:'close',maximizable:false,modal:true,plain:true,layout:'border',create:true,initComponent:function(){var _this=this;this.formPanel=new Ext.FormPanel({labelWidth:150,defaults:{width:180},defaultType:'textfield',frame:true,bodyStyle:'padding:5px 15px 0',items:[{xtype:'fieldset',title:Philosophy.Globalization.For('Description'),autoHeight:true,autoWidth:true,labelWidth:150,defaults:{width:150},defaultType:'textfield',items:[{name:'Id',hidden:true,hideLabel:true,value:0},{name:'Name',fieldLabel:Philosophy.Globalization.For('Name'),allowBlank:false,emptyText:Philosophy.Globalization.For('Field Required')},{name:'Description',fieldLabel:Philosophy.Globalization.For('Description'),xtype:'textarea',maxLength:200,maxLengthText:Philosophy.Globalization.For('Only 200 characters'),emptyText:Philosophy.Globalization.For('Field Required')}]}],listeners:{'actioncomplete':function(form,action){_this._grid.store.load();_this.close();},'actionfailed':function(form,action){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Problem in call'));}}});this.formPanel.addButton(Philosophy.Globalization.For('Submit'),function(){_this.createEntity();});this.formPanel.addButton(Philosophy.Globalization.For('Cancel'),function(){_this.close();});var panel=new Ext.Panel({region:'center',margins:'5 5 5 0',layout:'fit',items:this.formPanel});this.items=[panel];Phi.view.window.FormWorkSpace.superclass.initComponent.call(this);},readEntity:function(id){var _this=this;var option=id+'/json';Ext.Ajax.request({waitMsg:'Wait',url:Philosophy.UriTemplate.getUri('workspaceService','workspace',option),success:function(response,options){var responseData=Ext.util.JSON.decode(response.responseText);_this.formPanel.form.setValues(responseData);},failure:function(response,options){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Problem in call'));}});},createEntity:function(){var _this=this;var center=Philosophy.Map.map.getCenter();var pointVO={Lat:center.lat,Lon:center.lon,Zoom:Philosophy.Map.map.getZoom()};var workspaceVO=this.formPanel.form.getValues(false);workspaceVO.pointVO=pointVO;workspaceVO.Layers=Philosophy.Layer.getLayerIdString();workspaceVO.BaseLayer=Philosophy.mainToolbar.baseLayerCombo.getValue();if(this.formPanel.form.isValid()){if(this.create){workspaceVO.Public=true;workspaceVO.UserName=Philosophy.Session.getUser();Ext.Ajax.request({waitMsg:Philosophy.Globalization.For('Wait...'),url:Philosophy.UriTemplate.getUri('workspaceService','workspaceCreate'),method:'POST',headers:{'Content-Type':'text/json'},jsonData:workspaceVO,failure:function(response,options){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Problem in call'));},success:function(response,options){_this.success();}});}
else{Ext.Ajax.request({waitMsg:Philosophy.Globalization.For('Wait...'),url:Philosophy.UriTemplate.getUri('workspaceService','workspaceUpdate'),method:'PUT',headers:{'Content-Type':'text/json'},jsonData:workspaceVO,failure:function(response,options){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Problem in call'));},success:function(response,options){_this.success();}});}}
else{Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Check form'));}},success:function(){var panelWorkSpace=Philosophy.panelWorkSpace;panelWorkSpace.reload();this.close();}});﻿
Ext.ns("Phi.view.window");Phi.view.window.FormLocation=Ext.extend(Ext.Window,{title:Philosophy.Globalization.For('Location Detail'),width:400,height:400,closeAction:'close',maximizable:false,modal:true,plain:true,layout:'border',create:true,opener:null,point:null,marker:null,initComponent:function(){var _this=this;var formPanel=new Ext.FormPanel({id:'form-location',labelWidth:150,defaults:{width:180},defaultType:'textfield',frame:true,bodyStyle:'padding:5px 15px 0',items:[{xtype:'fieldset',title:Philosophy.Globalization.For('Description'),autoHeight:true,autoWidth:true,labelWidth:150,defaults:{width:150},defaultType:'textfield',items:[{name:'Id',hidden:true,hideLabel:true,value:0},{name:'Name',fieldLabel:Philosophy.Globalization.For('Name'),allowBlank:false,emptyText:Philosophy.Globalization.For('Field Required')},{name:'Description',fieldLabel:Philosophy.Globalization.For('Description'),xtype:'textarea',maxLength:200,maxLengthText:Philosophy.Globalization.For('Only 200 characters'),emptyText:Philosophy.Globalization.For('Field Required')}]}],listeners:{'actioncomplete':function(form,action){_this._grid.store.load();_this.close();},'actionfailed':function(form,action){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Problem in call'));}}});formPanel.addButton(Philosophy.Globalization.For('Submit'),function(){_this.createEntity();});formPanel.addButton(Philosophy.Globalization.For('Cancel'),function(){_this.close();if(_this.create){Philosophy.Map.markerLayer.removeMarker(_this.marker);}});var panel=new Ext.Panel({region:'center',margins:'5 5 5 0',layout:'fit',items:formPanel});this.items=[panel];Phi.view.window.FormLocation.superclass.initComponent.call(this);},readEntity:function(id){var _this=this;var option=id+'/json';Ext.Ajax.request({waitMsg:'Wait',url:Philosophy.UriTemplate.getUri('locationService','location',option),success:function(response,options){var responseData=Ext.util.JSON.decode(response.responseText);var formPanel=Ext.getCmp("form-location");formPanel.form.setValues(responseData);},failure:function(response,options){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Problem in call'));}});},createEntity:function(){var _this=this;var formPanel=Ext.getCmp("form-location");var locationVO=formPanel.form.getValues(false);locationVO.Favorite=false;locationVO.UserName=Philosophy.Session.getUser();if(formPanel.form.isValid()){if(_this.create){locationVO.pointVO=_this.point;Ext.Ajax.request({waitMsg:Philosophy.Globalization.For('Wait...'),url:Philosophy.UriTemplate.getUri('locationService','locationCreate'),method:'POST',headers:{'Content-Type':'text/json'},jsonData:locationVO,failure:function(response,options){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Problem in call'));},success:function(response,options){Philosophy.Map.markerLayer.removeMarker(_this.marker);Philosophy.Marker.drawMarker(_this.point.Lon,_this.point.Lat,null,null,locationVO.Name,locationVO.Description);_this.success();}});}
else{Ext.Ajax.request({waitMsg:Philosophy.Globalization.For('Wait...'),url:Philosophy.UriTemplate.getUri('locationService','locationUpdate'),method:'PUT',headers:{'Content-Type':'text/json'},jsonData:locationVO,failure:function(response,options){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Problem in call'));},success:function(response,options){_this.success();}});}}
else{Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Check form'));}},success:function(){var _this=this;var panelLocation=Philosophy.panelLocation;panelLocation.reload();_this.close();}});﻿
Ext.ns('Phi.view.window');Phi.view.window.FormLogin=Ext.extend(Ext.Window,{layout:'border',title:Philosophy.Globalization.For('Login'),maximizable:false,closable:false,resizable:false,modal:true,width:300,height:180,x:100,y:100,userName:'',initComponent:function(){var _this=this;this.loginForm=new Ext.FormPanel({region:'center',frame:true,bodyStyle:'padding:20px 5px 0 15px',width:350,labelWidth:75,defaults:{width:130},defaultType:'textfield',items:[{fieldLabel:Philosophy.Globalization.For('User'),name:'UserName',allowBlank:false},{fieldLabel:Philosophy.Globalization.For('Password'),name:'Password',inputType:'password',allowBlank:false}]});this.loginForm.keys=[{key:Ext.EventObject.ENTER,scope:this,fn:function(key,e){_this.login();}}];this.items=this.loginForm;this.buttons=[{text:Philosophy.Globalization.For('Login'),handler:function(){_this.login();}}];Phi.view.window.FormLogin.superclass.initComponent.call(this);},show:function(){Phi.view.window.FormLogin.superclass.show.call(this);var t=Philosophy.Theme.getMainTitles();if(this.modal){this.mask.setOpacity(1);this.mask.appendChild(t.title);this.mask.appendChild(t.subTitle);this.mask.appendChild(t.footer);this.mask.appendChild(Philosophy.Theme.getWelcomeImage());}},login:function(){var _this=this;if(this.loginForm.form.isValid()){var userVO=this.loginForm.form.getValues(false);Ext.Ajax.request({waitMsg:Philosophy.Globalization.For('Wait...'),url:Philosophy.UriTemplate.getUri('userService','userLogin'),method:'POST',headers:{'Content-Type':'text/json'},jsonData:userVO,failure:function(response,options){_this.userName=null;Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Problem in call'));},success:function(response,options){var responseData=Ext.util.JSON.decode(response.responseText);if(responseData==true){_this.logged(userVO);}
else{Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('User or password not valid'));}}});}},logged:function(user){var _this=this;Philosophy.Session.setUser(user.UserName);Philosophy.mainToolbar.load();Philosophy.panelUser.load();Philosophy.panelWorkSpace.load();Philosophy.panelLocation.load();Philosophy.panelLayer.root.firstChild.expand();this.getEl().fadeOut({duration:1});this.mask.fadeOut({duration:1,callback:function(){_this.close();}});}});﻿
Ext.ns("Phi.view.window");Phi.view.window.FormUser=Ext.extend(Ext.Window,{title:Philosophy.Globalization.For('User Detail'),width:400,height:400,closeAction:'close',maximizable:false,modal:true,plain:true,layout:'border',create:true,opener:null,initComponent:function(){var _this=this;var formPanel=new Ext.FormPanel({id:'form-user',labelWidth:150,defaults:{width:180},defaultType:'textfield',frame:true,bodyStyle:'padding:5px 15px 0',items:[{xtype:'fieldset',title:Philosophy.Globalization.For('Description'),autoHeight:true,autoWidth:true,labelWidth:150,defaults:{width:150},defaultType:'textfield',items:[{name:'UserName',fieldLabel:Philosophy.Globalization.For('UserName'),allowBlank:false,emptyText:Philosophy.Globalization.For('Field Required'),readOnly:!_this.create},{name:'Enabled',fieldLabel:Philosophy.Globalization.For('Enabled'),xtype:'checkbox'},{name:'Name',fieldLabel:Philosophy.Globalization.For('Name'),allowBlank:false,emptyText:Philosophy.Globalization.For('Field Required')},{name:'LastName',fieldLabel:Philosophy.Globalization.For('LastName'),allowBlank:false,emptyText:Philosophy.Globalization.For('Field Required')},{name:'Email',fieldLabel:Philosophy.Globalization.For('Email'),vtype:'email',allowBlank:false,emptyText:Philosophy.Globalization.For('Field Required')}]},{xtype:'fieldset',id:'fieldset-password',title:Philosophy.Globalization.For('Password'),autoHeight:true,autoWidth:true,labelWidth:150,defaults:{width:150},defaultType:'textfield',items:[{name:'Password',fieldLabel:Philosophy.Globalization.For('Password'),inputType:'password',allowBlank:false},{name:'Re-Password',fieldLabel:'Re-'+Philosophy.Globalization.For('Password'),inputType:'password',allowBlank:false,validator:_this.validPassword}]}],listeners:{'actioncomplete':function(form,action){_this._grid.store.load();_this.close();},'actionfailed':function(form,action){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Problem in call'));}}});formPanel.addButton(Philosophy.Globalization.For('Submit'),function(){_this.createEntity();});formPanel.addButton(Philosophy.Globalization.For('Cancel'),function(){_this.close();});var panelUser=new Ext.Panel({id:'panel-user',title:'',region:'center',margins:'5 5 5 5',layout:'fit',items:formPanel});this.items=[panelUser];Phi.view.window.FormUser.superclass.initComponent.call(this);},readEntity:function(userName){this.hidePassword();var option=userName+'/json';Ext.Ajax.request({waitMsg:Philosophy.Globalization.For('Wait...'),url:Philosophy.UriTemplate.getUri('userService','user',option),success:function(response,options){var responseData=Ext.util.JSON.decode(response.responseText);var formPanel=Ext.getCmp("form-user");formPanel.form.setValues(responseData);},failure:function(response,options){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Problem in call'));}});},createEntity:function(){var _this=this;var formPanel=Ext.getCmp("form-user");var userVO=formPanel.form.getValues(false);userVO.Enabled=true;if(formPanel.form.isValid()){if(_this.create){Ext.Ajax.request({waitMsg:Philosophy.Globalization.For('Wait...'),url:Philosophy.UriTemplate.getUri('userService','userCreate'),method:'POST',headers:{'Content-Type':'text/json'},jsonData:userVO,failure:function(response,options){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Codelco.Globalization.For('Problem in call'));},success:function(response,options){_this.opener.load();_this.close();}});}
else{Ext.Ajax.request({waitMsg:'Wait...',url:Philosophy.UriTemplate.getUri('userService','userUpdate'),method:'PUT',headers:{'Content-Type':'text/json'},jsonData:userVO,failure:function(response,options){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Problem in call'));},success:function(response,options){_this.opener.load();_this.close();}});}
pageTracker._trackPageview("/Codelco/Users/Create");}
else{Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Check form'));}},validPassword:function(){var formPanel=Ext.getCmp("form-user");var password=formPanel.getForm().findField("Password").getValue();var rePassword=formPanel.getForm().findField("Re-Password").getValue();if(password!=rePassword){return Philosophy.Globalization.For('Passwords are not equal');}
return true;},validLengthPassword:function(){var formPanel=Ext.getCmp("form-user");var password=formPanel.getForm().findField("Password").getValue();if(password.length<4){return Philosophy.Globalization.For('At least 4 characters');}
return true;},hidePassword:function(){var fieldSetPassword=Ext.getCmp("fieldset-password");fieldSetPassword.setVisible(false);var formPanel=Ext.getCmp("form-user");var password=formPanel.getForm().findField("Password");var rePassword=formPanel.getForm().findField("Re-Password");password.disabled=true;rePassword.disabled=true;}});Ext.ns("Phi.view.window");Phi.view.window.FormPassword=Ext.extend(Ext.Window,{title:Philosophy.Globalization.For('Password'),width:400,height:200,closeAction:'close',maximizable:false,modal:true,plain:true,layout:'border',userName:null,initComponent:function(){var _this=this;var formPanel=new Ext.FormPanel({id:'form-password',labelWidth:150,defaults:{width:180},defaultType:'textfield',frame:true,bodyStyle:'padding:5px 15px 0',items:[{xtype:'fieldset',id:'fieldset-password',title:Philosophy.Globalization.For('Password'),autoHeight:true,autoWidth:true,labelWidth:150,defaults:{width:150},defaultType:'textfield',items:[{name:'UserName',value:_this.userName,xtype:'hidden'},{name:'Password',fieldLabel:Philosophy.Globalization.For('Password'),inputType:'password',allowBlank:false,validator:_this.validLengthPassword},{name:'Re-Password',fieldLabel:'Re-'+Philosophy.Globalization.For('Password'),inputType:'password',allowBlank:false,validator:_this.validPassword}]}],listeners:{'actioncomplete':function(form,action){_this.close();},'actionfailed':function(form,action){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Problem in call'));}}});formPanel.addButton(Philosophy.Globalization.For('Submit'),function(){_this.changePassword();});formPanel.addButton(Philosophy.Globalization.For('Cancel'),function(){_this.close();});var panelPassword=new Ext.Panel({id:'panel-password',title:'',region:'center',margins:'5 5 5 0',layout:'fit',items:formPanel});this.items=[panelPassword];Phi.view.window.FormPassword.superclass.initComponent.call(this);},changePassword:function(){var _this=this;var formPanel=Ext.getCmp("form-password");var userVO=formPanel.form.getValues(false);if(formPanel.form.isValid()){Ext.Ajax.request({waitMsg:Philosophy.Globalization.For('Wait...'),url:Philosophy.UriTemplate.getUri('userService','userChangePassword'),method:'PUT',headers:{'Content-Type':'text/json'},jsonData:userVO,failure:function(response,options){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Problem in call'));},success:function(response,options){_this.close();}});}
else{Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Check form'));}},validLengthPassword:function(){var formPanel=Ext.getCmp("form-password");var password=formPanel.getForm().findField("Password").getValue();if(password.length<4){return Philosophy.Globalization.For('At least 4 characters');}
return true;},validPassword:function(){var formPanel=Ext.getCmp("form-password");var password=formPanel.getForm().findField("Password").getValue();var rePassword=formPanel.getForm().findField("Re-Password").getValue();if(password!=rePassword){return Philosophy.Globalization.For('Passwords are not equal');}
return true;}});﻿
Ext.ns('Phi.view.window');Phi.view.window.formAppSettings=Ext.extend(Ext.Window,{layout:'border',title:Philosophy.Globalization.For('Application settings'),maximizable:false,closable:true,resizable:false,modal:true,width:300,height:200,x:100,y:100,initComponent:function(){var _this=this;var themeCombo=new Ext.ux.ThemeCombo({name:'Theme',selectThemeText:Philosophy.Globalization.For('Theme')});var languageCombo=new Ext.ux.LangSelectCombo({name:'Language',selectLangText:Philosophy.Globalization.For('Language')});var settingsForm=new Ext.FormPanel({region:'center',frame:true,bodyStyle:'padding:20px 5px 0 15px',width:350,labelWidth:100,defaults:{width:130},defaultType:'textfield',items:[themeCombo,languageCombo]});this.items=settingsForm;this.settingsForm=settingsForm;this.buttons=[{text:Philosophy.Globalization.For('Submit'),handler:function(){var cfg=_this.getValues()
Philosophy.Util.setAppCfg(cfg);Ext.MessageBox.show({title:'',msg:Philosophy.Globalization.For('Restart app now ?'),buttons:Ext.MessageBox.YESNO,fn:function(btn,text){if(btn=='yes'){window.location.reload()}}});_this.close();}},{text:Philosophy.Globalization.For('Cancel'),handler:function(){_this.cancel();}}];Phi.view.window.formAppSettings.superclass.initComponent.call(this);},setValues:function(cfg){this.settingsForm.getForm().findField("Theme").setValue(cfg.theme),this.settingsForm.getForm().findField("Language").setValue(cfg.language)},getValues:function(){var _this=this;var cfg={theme:_this.settingsForm.getForm().findField("Theme").getValue(),language:_this.settingsForm.getForm().findField("Language").getValue()};return cfg;},cancel:function(){this.close();}});Ext.ns("Phi.view.window");Phi.view.window.FormExport=Ext.extend(Ext.Window,{title:Philosophy.Globalization.For('Export'),width:400,height:300,closeAction:'close',maximizable:false,modal:true,layout:'border',maximizable:false,resizable:false,initComponent:function(){var _this=this;var data=[['application/pdf','PDF','icon-file-pdf'],['image/jpeg','JPEG','icon-file-image'],['image/gif','GIF','icon-file-image'],['image/png','PNG','icon-file-image'],['image/png','PNG (optimal 256 color palette)','icon-file-image'],['image/tiff','TIFF','icon-file-image'],['image/tiff8','TIFF (optimal 256 color palette)','icon-file-image'],['image/svg','SVG','icon-file-image'],['application/vnd.google-earth.kml','KML','icon-file-image']];var storeFormat=new Ext.data.SimpleStore({fields:['value','name','class'],data:data})
this.comboFormat=new Ext.ux.IconCombo({fieldLabel:Philosophy.Globalization.For('Format'),store:storeFormat,valueField:'value',displayField:'name',iconClsField:'class',editable:false,mode:'local',triggerAction:'all',emptyText:Philosophy.Globalization.For('Select a export format'),selectOnFocus:true,allowBlank:false});var dataLayerFormat=[['OGR-SHP-ZIP','SHAPE'],['GML2','GML2'],['GML3','GML3'],['OGR-KML','KML'],['json','JSON'],['CSV','CSV'],['OGR-TAB','TAB'],['OGR-MIF','MIF'],['OGR-TAB','TAB']];var storeLayerFormat=new Ext.data.SimpleStore({fields:['value','name'],data:dataLayerFormat})
this.comboLayerFormat=new Ext.form.ComboBox({fieldLabel:Philosophy.Globalization.For('Format'),store:storeLayerFormat,valueField:'value',displayField:'name',editable:false,mode:'local',triggerAction:'all',emptyText:Philosophy.Globalization.For('Select a export format'),selectOnFocus:true,allowBlank:false});this.comboLayer=new Phi.view.comboBox.Layer();var formMapPanel=new Ext.FormPanel({xid:0,title:Philosophy.Globalization.For('Map Export'),labelWidth:150,defaults:{width:240},labelAlign:'top',region:'center',bodyStyle:'padding:5px',frame:true,items:[this.comboFormat]});var formLayerPanel=new Ext.FormPanel({xid:1,title:Philosophy.Globalization.For('Layer Export'),labelWidth:150,defaults:{width:240},labelAlign:'top',region:'center',bodyStyle:'padding:5px',frame:true,items:[this.comboLayerFormat,this.comboLayer]});this.tabPanel=new Ext.TabPanel({title:'',region:'center',margins:'5 5 5 5',activeTab:0,plain:true,defaults:{autoScroll:true},items:[formMapPanel,formLayerPanel]});this.items=[this.tabPanel];Phi.view.window.FormExport.superclass.initComponent.call(this);this.addButton(Philosophy.Globalization.For('Close'),function(){_this.close();});this.addButton(Philosophy.Globalization.For('Export'),function(){_this.exportAction();});this.comboFormat.setValue('application/pdf');this.comboLayerFormat.setValue('OGR-SHP-ZIP');},exportAction:function(){var panel=this.tabPanel.getActiveTab();if(!panel.form.isValid()){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Check form'));return;}
if(panel.xid==0)
this.exportMap();if(panel.xid==1)
this.exportLayer();},exportMap:function(){var format=this.comboFormat.getValue();var bound=Philosophy.Map.map.getExtent();var bbox=bound.left+','+bound.bottom+','+bound.right+','+bound.top;var size=Philosophy.Map.map.getSize();var query={request:'GetMap',version:'1.1.1',format:format,style:'',layers:Philosophy.Layer.getWMSLayers(Philosophy.Config.wmsNameSpace),srs:'EPSG:900913',bbox:bbox,width:size.w,height:size.h}
var wmsUrl=Philosophy.Config.wmsUrl+Ext.urlEncode(query);window.open(wmsUrl);},exportLayer:function(){var layer=Philosophy.Config.wmsNameSpace+':'+this.comboLayer.getValue().split('.')[1];var format=this.comboLayerFormat.getValue();var query={request:'getfeature',service:'wfs',version:'1.1.0',typename:layer,outputFormat:format}
var wfsUrl=Philosophy.Config.wfsUrl+Ext.urlEncode(query);window.open(wfsUrl);}});Ext.ns("Phi.view.window");Phi.view.window.Legend=Ext.extend(Ext.Window,{title:Philosophy.Globalization.For('Layer Description'),width:400,height:500,closeAction:'close',maximizable:false,modal:false,plain:true,layout:'border',zoom:null,initComponent:function(){var _this=this;var panelLegend=new Ext.Panel({title:'',region:'center',margins:'5 5 5 5',layout:'fit',items:'',autoScroll:true,html:'<img src="'+Philosophy.Config.legendUrl+'?pname=codelcoelteniente&width=250&symbolsize=80x10&maptype=vector&zoom='+_this.zoom+'" />'});this.items=[panelLegend];Phi.view.window.Legend.superclass.initComponent.call(this);this.addButton(Philosophy.Globalization.For('Close'),function(){_this.close();});},refreshHtml:function(zoom){this.zoom=zoom;var html='<img src="'+Philosophy.Config.legendUrl+'?pname=codelcoelteniente&width=250&symbolsize=80x10&maptype=vector&zoom='+this.zoom+'" />';}});﻿
Ext.ns("Phi.view.window");Phi.view.window.Mantainer=Ext.extend(Ext.Window,{layout:'border',closeAction:'close',maximizable:true,modal:true,plain:true,width:570,height:380,panelTitle:null,entityText:null,readUrl:null,deleteUrl:null,createIconCls:null,createHidden:false,deleteIconCls:null,deleteHidden:false,editIconCls:null,listReader:null,columModel:null,detailForm:null,toolBarItems:'',windowsItems:null,contextMenuItems:'',ddGroup:'',enableDragDrop:false,_grid:null,initComponent:function(){var _this=this;var reader=_this.listReader;var proxy=new Ext.data.HttpProxy({url:_this.readUrl,method:'GET'});var ds=new Ext.data.Store({reader:reader,proxy:proxy,sortInfo:{field:'UserName',direction:"ASC"}});var columnModel=_this.columModel;var pagingToolbar=new Ext.PagingToolbar({store:ds,pageSize:15,displayInfo:true,displayMsg:'{0} - {1} of {2}',emptyMsg:"No groups to display"});var gridList=new Ext.grid.GridPanel({ddGroup:_this.ddGroup,enableDragDrop:_this.enableDragDrop,loadMask:true,ds:ds,cm:_this.columnModel,bbar:pagingToolbar,frame:true,header:false,listeners:{rowdblclick:function(grid,row){_this.readEntity();}}});_this.contextMenuItems.unshift({iconCls:_this.editIconCls,text:Philosophy.Globalization.For('Edit'),handler:function(){_this.readEntity();}});var gridContextMenu=new Ext.menu.Menu({items:_this.contextMenuItems});function onGridContextMenu(grid,rowIndex,e){e.stopEvent();var coords=e.getXY();_this.rowIndex=rowIndex;grid.getSelectionModel().clearSelections();grid.getSelectionModel().selectRow(rowIndex);gridContextMenu.showAt([coords[0],coords[1]]);}
gridList.addListener('rowcontextmenu',onGridContextMenu);this._grid=gridList;var tbgrid=new Ext.Toolbar({items:[{text:Philosophy.Globalization.For('Create'),iconCls:_this.createIconCls,hidden:_this.createHidden,handler:function(){_this.createEntity();}},{text:Philosophy.Globalization.For('Delete'),iconCls:_this.deleteIconCls,hidden:_this.deleteHidden,handler:function(){Ext.Msg.confirm(Philosophy.Globalization.For('Delete'),Philosophy.Globalization.For('Are you sure ?'),function(btn,text){if(btn=='yes'){_this.deleteEntity();}});}},'-',{xtype:'tbfill'},_this.toolBarItems]});var panelMain=new Ext.Panel({title:'',region:'center',margins:'5 5 5 5',layout:'fit',tbar:tbgrid,items:gridList});if(_this.windowsItems!=null){this.items=[panelMain,_this.windowsItems];}
else{this.items=[panelMain];}
gridList.keys=[{key:Ext.EventObject.ENTER,scope:this,fn:function(key,e){_this.readEntity();}},{key:46,scope:this,fn:function(key,e){if(_this.deleteHidden){return null;}
Ext.Msg.confirm(Philosophy.Globalization.For('Delete'),Philosophy.Globalization.For('Are you sure ?'),function(btn,text){if(btn=='yes'){_this.deleteEntity();}});}}];this.buttons=[{text:Philosophy.Globalization.For('Close'),handler:function(){_this.close();}}];Phi.view.window.Mantainer.superclass.initComponent.call(this);_this.load();},createEntity:function(){var _this=this;var win=new _this.detailForm({create:true,opener:_this});win.show(this);},readEntity:function(){var _this=this;var selections=this.getSelections();var userName=selections[0].data.UserName;var win=new _this.detailForm({title:Philosophy.Globalization.For('User Detail'),height:300,create:false,opener:_this});win.show(this);win.readEntity(userName);},deleteEntity:function(){var _this=this;var selections=_this.getSelections();if(selections.length<1){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Select at least one row'));return false;}
var userName=selections[0].data.UserName;Ext.Ajax.request({waitMsg:Philosophy.Globalization.For('Wait...'),url:_this.deleteUrl+userName,method:'DELETE',failure:function(response,options){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Problem in call'));},success:function(response,options){_this.load();}});},load:function(){var _this=this;var gridList=_this._grid;gridList.store.load({params:{start:0,limit:15}});},reload:function(){var _this=this;var gridList=_this._grid;gridList.store.reload();},getSelections:function(){var _this=this;var gridList=_this._grid;var sm=gridList.getSelectionModel();return sm.getSelections();}});﻿
Ext.ns("Phi.view.window");Phi.view.window.MantainerUser=Ext.extend(Phi.view.window.Mantainer,{title:Philosophy.Globalization.For('User Administration'),panelTitle:'',width:620,height:450,entityText:'User',createIconCls:'icon-user-add ',deleteIconCls:'icon-user-delete',editIconCls:'icon-user-edit',readUrl:Philosophy.UriTemplate.getUri('userService','users','/paging'),deleteUrl:Philosophy.UriTemplate.getUri('userService','user'),initComponent:function(){var _this=this;this.listReader=new Ext.data.JsonReader({root:'List',totalProperty:'Total',fields:["UserName","Name","LastName","Email","Enabled"]});this.toolBarItems=[{text:Philosophy.Globalization.For('Password'),iconCls:'icon-key',handler:function(){_this.setPassword();}},{text:Philosophy.Globalization.For('Enabled'),iconCls:'icon-accept',handler:function(){_this.enabledUser(true);}},{text:Philosophy.Globalization.For('Disable'),iconCls:'icon-delete',handler:function(){_this.enabledUser(false);}}];this.contextMenuItems=[{text:Philosophy.Globalization.For('Password'),iconCls:'icon-key',handler:function(){_this.setPassword();}},{text:Philosophy.Globalization.For('Enabled'),iconCls:'icon-accept',handler:function(){_this.enabledUser(true);}},{text:Philosophy.Globalization.For('Disable'),iconCls:'icon-delete',handler:function(){_this.enabledUser(false);}}];this.detailForm=Phi.view.window.FormUser;this.columnModel=new Ext.grid.ColumnModel([{header:'',width:30,sortable:false,renderer:_this.renderImage,dataIndex:'UserName'},{header:Philosophy.Globalization.For('UserName'),width:100,sortable:true,align:'left',dataIndex:'UserName'},{header:Philosophy.Globalization.For('Name'),width:120,sortable:true,align:'left',dataIndex:'Name'},{header:Philosophy.Globalization.For('LastName'),width:120,sortable:true,align:'left',dataIndex:'LastName'},{header:Philosophy.Globalization.For('Email'),width:200,sortable:true,align:'left',dataIndex:'Email'}]);Phi.view.window.MantainerUser.superclass.initComponent.call(this);},renderImage:function(val,m,record){var enabled=record.get("Enabled");if(enabled){return'<img src="content/images/icons/user.png" />';}
else{return'<img src="content/images/icons/user_red.png" />';}},enabledUser:function(enabled){var _this=this;var selections=this.getSelections();if(selections.length!=1){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Select at least one row'));return null;}
var userName=selections[0].data.UserName;var userVO=({UserName:userName,Enabled:enabled});Ext.Ajax.request({waitMsg:Philosophy.Globalization.For('Wait...'),url:Philosophy.UriTemplate.getUri('userService','userEnabled'),method:'PUT',headers:{'Content-Type':'text/json'},jsonData:userVO,failure:function(response,options){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Problem in call'));},success:function(response,options){_this.reload();}});},setPassword:function(){var selections=this.getSelections();if(selections.length!=1){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Select at least one row'));return null;}
var userName=selections[0].data.UserName;var win=new Phi.view.window.FormPassword({title:_this.entityText+" ["+userName+"]",userName:userName});win.show(this);}});Ext.ns("Phi.view.window");Phi.view.window.Metadata=Ext.extend(Ext.Window,{title:Philosophy.Globalization.For('Layer Query'),width:450,height:400,closeAction:'close',maximizable:false,plain:true,layout:'border',comboLayer:null,storeMetadata:null,multiMetadata:null,comboOperator:null,textValue:null,textQueryDesc:null,x:100,y:100,modal:true,initComponent:function(){var _this=this;var paramsLayer={};var comboLayer=new Phi.view.comboBox.Layer();comboLayer.on('select',function(combo,record,index){var layerName=record.data.Name;_this.loadMetadata(layerName);_this.textQueryDesc.setRawValue(_this.renderQueryDesc(_this.buildQuery()));_this.textValue.setLabel("Value");});var proxy_metadata=new Ext.data.HttpProxy({method:'GET',url:Philosophy.UriTemplate.getUri('geoService','geoGetMetadata')});var storeMetadata=new Ext.data.Store({reader:new Ext.data.JsonReader({fields:["Name","Type"]}),proxy:proxy_metadata});var multiMetadata=new Ext.ux.Multiselect({fieldLabel:Philosophy.Globalization.For('Fields'),name:"multiselect",store:storeMetadata,valueField:"Name",displayField:"Name",criteriaField:"Type",width:180,height:"auto",allowBlank:true,legend:" "});multiMetadata.on('click',function(){_this.textQueryDesc.setRawValue(_this.renderQueryDesc(_this.buildQuery()));_this.textValue.setLabel(Philosophy.Globalization.For('Value')+"["+_this.multiMetadata.getValue('Type')+"]");});var storeOperator=new Ext.data.SimpleStore({fields:['value','name'],data:[['eq','='],['ne','!='],['le','<='],['lt','<'],['gt','>'],['ge','>='],['7','BEGIN WITH'],['8','END WITH'],['9','CONTAIN'],['10','ALL']]});var comboOperator=new Ext.form.ComboBox({store:storeOperator,fieldLabel:Philosophy.Globalization.For('Operator'),displayField:'name',valueField:'value',mode:'local',anchor:'95%',forceSelection:true,triggerAction:'all',emptyText:Philosophy.Globalization.For('Select Operator'),selectOnFocus:true,allowBlank:false,readOnly:true});comboOperator.on('select',function(combo,record,index){_this.textQueryDesc.setRawValue(_this.renderQueryDesc(_this.buildQuery()));});Ext.override(Ext.form.Field,{setLabel:function(t){var r=this.getEl().up('div.x-form-item');r.dom.firstChild.firstChild.nodeValue=String.format('{0}',t);}});var textValue=new Ext.form.TriggerField({fieldLabel:Philosophy.Globalization.For('Value'),name:'value',anchor:'95%',triggerClass:'x-form-search-trigger',enableKeyEvents:true,onTriggerClick:function(){_this.showUniqueValues();}});textValue.on('keyup',function(){_this.textQueryDesc.setRawValue(_this.renderQueryDesc(_this.buildQuery()));});var textQueryDesc=new Ext.ux.form.StaticTextField({anchor:'100%',height:100,fieldLabel:Philosophy.Globalization.For('Query Preview'),readOnly:true});var form=new Ext.FormPanel({id:'form_query',labelAlign:'top',region:'center',bodyStyle:'padding:5px',width:600,items:[{layout:'column',border:false,items:[{columnWidth:0.5,layout:'form',border:false,items:[comboLayer,multiMetadata]},{columnWidth:0.5,layout:'form',border:false,items:[comboOperator,textValue]}]},{plain:true,border:false,height:235,defaults:{bodyStyle:'padding:10px'},items:[{layout:'form',items:[textQueryDesc]}]}]});this.comboLayer=comboLayer;this.storeMetadata=storeMetadata;this.multiMetadata=multiMetadata;this.comboOperator=comboOperator;this.textValue=textValue;this.textQueryDesc=textQueryDesc;this.items=[form];Phi.view.window.Metadata.superclass.initComponent.call(this);this.addButton(Philosophy.Globalization.For('Close'),function(){_this.close();});this.addButton(Philosophy.Globalization.For('Execute'),function(){_this.apply();});},setLayer:function(layerName,layerTitle){this.comboLayer.setValue(layerName);this.loadMetadata(layerName);this.textQueryDesc.setRawValue(this.renderQueryDesc(this.buildQuery()));},showUniqueValues:function(){var layerName=this.comboLayer.getValue();var column=this.multiMetadata.getValue();if(!layerName||!column){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Must select layer and field'));return;}
var win=new Phi.view.window.UniqueResult({layerName:layerName,column:column,textValue:this.textValue});win.show();var _this=this;win.on('close',function(){_this.textQueryDesc.setRawValue(_this.renderQueryDesc(_this.buildQuery()));});pageTracker._trackPageview("/Codelco/Metadata/ShowUniqueValue");},loadMetadata:function(layerName){var paramsMetadata={layerName:layerName};this.storeMetadata.load({params:paramsMetadata});pageTracker._trackPageview("/Codelco/Metadata/Load");},apply:function(){var form=Ext.getCmp("form_query");if(!form.form.isValid()){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Check form'));return;}
var operator=this.comboOperator.getValue();var field=this.multiMetadata.getValue();var fields=field.split(',');if(fields.length!=1&&operator!=10){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Select one field'));return;}
var query=this.buildQuery();if(query.operator!='10'&&query.value==''){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Needs a value field'));return;}
this.textQueryDesc.setRawValue(this.renderQueryDesc(query));var md=this.buildMetadataArray();var gmd=Philosophy.Util.clone(md);gmd.push('wkt_geometry');var cm=Philosophy.Util.buildColumnModel(gmd);var ds=Philosophy.Util.buildDataStore(gmd);var win=new Phi.view.window.MetadataResult({title:query.table,ds:ds,cm:cm,paging:true,extent:true,query:query});win.show();var paramsQuery={layerName:query.table,SRID:'96',fields:md.join(','),field:query.field,op:query.operator,value:query.value,wkt:'1',paging:'1'};ds.baseParams=paramsQuery;var params={start:0,limit:100};win.load(params);},buildMetadataArray:function(){var v=[];this.multiMetadata.store.each(function(rec){v.push(rec.data.Name);});return v;},buildQuery:function(){var query={table:this.comboLayer.getValue(),field:this.multiMetadata.getValue(),operator:this.comboOperator.getValue(),value:this.textValue.getValue()};return query;},renderQueryDesc:function(query){var setTextColor=function(t,c){return'<span style="color:'+c+';">'+t+'</span>';};var setValueTemplate=function(v){return isNaN(v)?setTextColor('"'+v+'"','green'):setTextColor(v,'orange');};var displayOperator={'eq':' = ','ne':' != ','le':' <= ','lt':' < ','gt':' > ','ge':' >= ','7':' LIKE ','8':' LIKE ','9':' LIKE ','10':''};var where=setTextColor(' WHERE ','blue')+
setTextColor(query.field,'gray');switch(query.operator){case'7':where+=setTextColor(displayOperator[query.operator],'blue')+
setTextColor('"%'+query.value+'"','green');break
case'8':where+=setTextColor(displayOperator[query.operator],'blue')+
setTextColor('"'+query.value+'%"','green');break
case'9':where+=setTextColor(displayOperator[query.operator],'blue')+
setTextColor('"%'+query.value+'%"','green');break
case'10':where='';break
default:where+=setTextColor(displayOperator[query.operator]||' ','black')+setValueTemplate(query.value);}
var queryDesc=setTextColor('SELECT ','blue')
+setTextColor('*','gray')
+setTextColor(' FROM ','blue')
+setTextColor(query.table,'gray')
+where;return queryDesc;}});﻿
Ext.ns("Phi.view.window");Phi.view.window.MetadataResult=Ext.extend(Ext.Window,{width:800,height:500,closeAction:'close',maximizable:false,modal:true,plain:true,layout:'border',ds:null,cm:null,showDetail:false,paging:false,extent:false,query:null,geomData:true,initComponent:function(){var _this=this;var tbar="";if(this.geomData){tbar=new Ext.Toolbar({items:[{iconCls:'icon-database-refresh',text:Philosophy.Globalization.For('Reload'),tooltip:Philosophy.Globalization.For('Reload'),handler:function(){_this.reload();}},{iconCls:'icon-select_all',text:Philosophy.Globalization.For('Select All'),tooltip:Philosophy.Globalization.For('Select All'),handler:function(){_this.selectAll();}},{iconCls:'icon-pencil',text:Philosophy.Globalization.For('Draw'),tooltip:Philosophy.Globalization.For('Draw'),handler:function(){_this.validateDraw();}}]});}
var view=new Ext.grid.GridView({forceFit:false,enableRowBody:true,ignoreAdd:true,emptyText:Philosophy.Globalization.For('No record found')});var pagingToolbar='';if(this.paging){pagingToolbar=new Ext.PagingToolbar({store:this.ds,pageSize:100,displayInfo:true,displayMsg:'{0} - {1} of {2}',emptyMsg:"No groups to display"});}
this.grid=new Ext.grid.GridPanel({region:'center',loadMask:true,frame:true,header:false,tbar:tbar,bbar:pagingToolbar,view:view,ds:this.ds,cm:this.cm});function onGridContextMenu(grid,rowIndex,e){e.stopEvent();var coords=e.getXY();_this.rowIndex=rowIndex;grid.getSelectionModel().clearSelections();grid.getSelectionModel().selectRow(rowIndex);gridContextMenu.showAt([coords[0],coords[1]]);}
if(this.showDetail){this.grid.addListener('rowdblclick',this.showClickDetail);}
if(this.geomData){this.grid.addListener('rowcontextmenu',onGridContextMenu);}
var gridContextMenu=new Ext.menu.Menu({items:[{iconCls:'icon-pencil',text:Philosophy.Globalization.For('Draw'),handler:function(){_this.validateDraw();}},{iconCls:'icon-pencil',text:Philosophy.Globalization.For('WKT'),handler:function(){_this.showWKT();}}]});this.items=[this.grid];Phi.view.window.MetadataResult.superclass.initComponent.call(this);this.addButton(Philosophy.Globalization.For('Close'),function(){_this.close();});},load:function(params){this.ds.load({params:params});},reload:function(){this.ds.reload();},validateDraw:function(){var _this=this;var s=this.getSelections();if(s.length<1){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Select at least one row'));return null;}
Ext.MessageBox.show({title:'',msg:Philosophy.Globalization.For('Clear already draw geometries ?'),buttons:Ext.MessageBox.YESNO,fn:function(btn,text){if(btn=='yes'){Philosophy.Map.vectorLayer.destroyFeatures();_this.drawGeometries();}
if(btn=='no'){_this.drawGeometries();}}});},drawGeometries:function(){var s=this.getSelections();for(i=0;i<s.length;i++){var wkt=s[i].data.wkt_geometry;Philosophy.Map.parseWKT(wkt);}},showWKT:function(){var s=this.getSelections();var wkt=s[0].data.wkt_geometry;Ext.MessageBox.show({title:'WKT',value:wkt,width:600,minHeight:400,height:400,buttons:Ext.MessageBox.OK,multiline:true});},showClickDetail:function(grid,row){var sm=grid.getSelectionModel();var s=sm.getSelections();var id=s[0].data.Id;var layerName=s[0].data.LayerName;var layerTitle=s[0].data.LayerTitle;var proxy_metadata=new Ext.data.HttpProxy({method:'GET',url:Philosophy.UriTemplate.getUri('geoService','geoGetMetadata')});var ds=new Ext.data.Store({reader:new Ext.data.JsonReader({fields:["Name","Type"]}),proxy:proxy_metadata});ds.load({params:{layerName:layerName}});ds.on('load',function(){var md=[];for(i=0;i<this.getCount();i++){md[i]=this.getAt(i).get('Name');}
var gmd=Philosophy.Util.clone(md);gmd.push('wkt_geometry');var cm=Philosophy.Util.buildColumnModel(gmd);var ds=Philosophy.Util.buildDataStore(gmd);var query={table:layerName,field:'gid',operator:'eq',value:id};var title=layerTitle+' ['+query.table+']';var win=new Phi.view.window.MetadataResult({title:title,ds:ds,cm:cm,height:190});win.show();var paramsQuery={layerName:query.table,SRID:'96',fields:md.join(','),field:query.field,op:query.operator,value:query.value,wkt:'1',paging:'1',limit:50,start:0};win.load(paramsQuery);});},selectAll:function(){this.grid.getSelectionModel().selectAll();},getSelections:function(){var grid=this.grid;var sm=grid.getSelectionModel();return sm.getSelections();},zoomToExtent:function(layer){}});﻿
Ext.ns("Phi.view.window");Phi.view.window.UniqueResult=Ext.extend(Ext.Window,{width:260,height:500,closeAction:'close',maximizable:false,modal:true,plain:true,layout:'border',initComponent:function(){var _this=this;var params={layerName:this.layerName,column:this.column};var proxy=new Ext.data.HttpProxy({method:'GET',url:Philosophy.UriTemplate.getUri('geoService','geoGetUniqueValues')});var ds=new Ext.data.Store({reader:new Ext.data.JsonReader({fields:["Value"]}),proxy:proxy,sortInfo:{field:'Value',direction:"ASC"}});var cm=new Ext.grid.ColumnModel([{header:Philosophy.Globalization.For('Value'),width:200,sortable:true,dataIndex:'Value'}]);var view=new Ext.grid.GridView({forceFit:false,enableRowBody:true,ignoreAdd:true,emptyText:'No record found'});var grid=new Ext.grid.GridPanel({region:'center',loadMask:true,frame:true,header:false,view:view,cm:cm,ds:ds,listeners:{rowdblclick:function(grid,row){_this.setFormValue();}}});this.grid=grid;this.items=[grid];Phi.view.window.MetadataResult.superclass.initComponent.call(this);this.addButton(Philosophy.Globalization.For('Close'),function(){_this.close();});this.load(params);},load:function(query){this.grid.store.load({params:query});},reload:function(){this.grid.store.reload();},setFormValue:function(){var s=this.getSelections();var v=s[0].data.Value;this.textValue.setValue(v);this.close();},getSelections:function(){var grid=this.grid;var sm=grid.getSelectionModel();return sm.getSelections();}});﻿
Ext.ns("Phi.view.window");Phi.view.window.SearchLayer=Ext.extend(Ext.Window,{title:'',width:800,height:400,pageSize:500,plain:true,layout:'border',initComponent:function(){var _this=this;var reader=new Ext.data.JsonReader({root:'List',totalProperty:'Total',fields:["Name","Title","Type",{name:'Date',convert:Philosophy.Util.fixWCFJsonDate}]});var proxy=new Ext.data.HttpProxy({method:'GET',url:Philosophy.UriTemplate.getUri('layerService','layerSearch')});var paramSearch={pattern:'',position:'0'};var ds=new Ext.data.Store({baseParams:paramSearch,reader:reader,proxy:proxy,sortInfo:{field:'Title',direction:"ASC"}});var sm=new Ext.grid.CheckboxSelectionModel();var cm=new Ext.grid.ColumnModel([sm,{header:'',width:25,dataIndex:'Name',renderer:_this.renderLeaf},{header:Philosophy.Globalization.For('Title'),width:150,sortable:true,dataIndex:'Title'},{header:Philosophy.Globalization.For('Type'),width:100,sortable:true,dataIndex:'Type'},{header:Philosophy.Globalization.For('Date'),width:100,sortable:true,dataIndex:'Date',renderer:_this.renderDate}]);var bbar=new Ext.PagingToolbar({store:ds,pageSize:this.pageSize,displayInfo:true,displayMsg:'{0} - {1} of {2}',emptyMsg:Philosophy.Globalization.For('Empty')});var view=new Ext.grid.GridView({forceFit:false,enableRowBody:true,ignoreAdd:true,emptyText:Philosophy.Globalization.For('Empty')});this.grid=new Ext.grid.GridPanel({title:'',width:470,frame:true,ds:ds,cm:cm,sm:sm,view:view,bbar:bbar,region:'center'});function onGridContextMenu(grid,rowIndex,e){e.stopEvent();var coords=e.getXY();_this.layerContextMenu.showAt([coords[0],coords[1]]);var layerName=_this.grid.store.getAt(rowIndex).get('Name');_this.layerContextMenu.layerName=layerName;_this.layerContextMenu.rowIndex=rowIndex;}
this.grid.addListener('rowcontextmenu',onGridContextMenu);this.layerContextMenu=new Phi.view.menu.Layer({enableCheckLayer:true});this.layerContextMenu.on('checkLayer',function(layerName,node,rowIndex){_this.grid.getSelectionModel().clearSelections();_this.grid.getSelectionModel().selectRow(rowIndex);});this.searchLayerForm=new Phi.view.form.SearchLayer({region:'west'});this.searchLayerForm.addButton(Philosophy.Globalization.For('Search'),function(){_this.load();});this.searchLayerForm.patternField.on('specialkey',function(f,e){if(e.getKey()==e.ENTER){_this.load();}},this);this.items=[this.searchLayerForm,this.grid];Phi.view.window.SearchLayer.superclass.initComponent.call(this);this.addButton(Philosophy.Globalization.For('Close'),function(){_this.close();});this.addButton(Philosophy.Globalization.For('Apply'),function(){_this.apply();});},show:function(){Phi.view.window.SearchLayer.superclass.show.call(this);this.getEl().fadeIn({duration:1});},getCMLayerName:function(){var i=this.gridContextMenu.rowIndex;var r=this.grid.store.getAt(i);return r.get('Name');},apply:function(){var layers=this.getCheckedLayers();if(layers.length<1){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Select at least one layer'));return;}
var container=Ext.get('map');Philosophy.Util.popupMessage(Philosophy.Globalization.For('Apply msg'),'',container);Philosophy.Layer.apliedLayers=layers;Philosophy.Map.redrawMainLayer(Philosophy.Layer.getWMSLayers(Philosophy.Config.wmsNameSpace));Philosophy.panelLayer.panelResume.update();Philosophy.panelLayer.showResume();},getCheckedLayers:function(){var sm=this.grid.getSelectionModel();var selections=sm.getSelections();var layers=[];for(i=0;i<selections.length;i++){var name=selections[i].data.Name;var title=selections[i].data.Title;var layer={'name':name,'title':title};layers.push(layer);}
return layers;},renderTitle:function(val,m,record){return'<b>'+val+'</b>';},renderLeaf:function(val,m,record){return'<img src="content/images/icons/shape_move_forwards.png" />';},renderDate:function(val,m,record){var d1=val;var d2=new Date();var m=d2-d1;var mPerYear=1000*60*60*24*365.26;var diff=m/mPerYear;var color=diff>3?'#ff8888':'#000';var date=Ext.util.Format.date(d1,'d/m/Y');return'<span style="color:'+color+';">'+date+'</span>';},load:function(){var params=this.searchLayerForm.getParams();this.grid.store.baseParams=params;this.grid.store.load({params:{start:0,limit:this.pageSize}});this.grid.getEl().highlight();},reload:function(){this.grid.store.reload();},getSelections:function(){var sm=this.grid.getSelectionModel();return sm.getSelections();}});Ext.override(Ext.grid.CheckboxSelectionModel,{onMouseDown:function(e,t){if(e.button===0){e.stopEvent();var row=e.getTarget('.x-grid3-row');if(row){var index=row.rowIndex;if(this.isSelected(index)){this.deselectRow(index);}else{this.selectRow(index,true);}}}}});﻿
Ext.ns("Phi.view.window");Phi.view.window.SearchWorkSpace=Ext.extend(Ext.Window,{title:'',width:490,height:380,pageSize:25,plain:true,layout:'fit',initComponent:function(){var _this=this;this.patternField=new Ext.form.TextField({name:'pattern',width:170});this.patternField.on('specialkey',function(f,e){if(e.getKey()==e.ENTER){_this.load();}},this);this.comboPosition=new Phi.view.comboBox.Pattern();this.tbar=new Ext.Toolbar({items:[this.patternField,this.comboPosition,{xtype:'tbfill'},{text:Philosophy.Globalization.For('Search'),iconCls:'icon-accept',handler:function(){_this.load();}}]});var reader=new Ext.data.JsonReader({root:'List',totalProperty:'Total',fields:["Id","Name","Layers","BaseLayer","Public","pointVO","UserName"]});var proxy=new Ext.data.HttpProxy({method:'GET',url:Philosophy.UriTemplate.getUri('workspaceService','workspaceSearch')});var paramSearch={pattern:'',position:'0'};var ds=new Ext.data.Store({baseParams:paramSearch,reader:reader,proxy:proxy,sortInfo:{field:'Name',direction:"ASC"}});var cm=new Ext.grid.ColumnModel([{header:'',width:25,dataIndex:'Name',renderer:_this.renderWS},{header:Philosophy.Globalization.For('Name'),width:200,sortable:true,dataIndex:'Name'},{header:Philosophy.Globalization.For('User'),width:100,sortable:true,dataIndex:'UserName'}]);var ptbar=new Ext.PagingToolbar({store:ds,pageSize:this.pageSize,displayInfo:true,displayMsg:'{0} - {1} of {2}',emptyMsg:Philosophy.Globalization.For('Empty')});var view=new Ext.grid.GridView({forceFit:false,enableRowBody:true,ignoreAdd:true,emptyText:Philosophy.Globalization.For('Empty')});this.grid=new Ext.grid.GridPanel({title:'',width:470,frame:true,ds:ds,cm:cm,view:view,bbar:ptbar,listeners:{rowdblclick:function(grid,rowIndex){Ext.fly(grid.getView().getRow(rowIndex)).frame("C3DAF9",1,{duration:2});_this.setWorkSpace();}}});function onGridContextMenu(grid,rowIndex,e){e.stopEvent();var coords=e.getXY();_this.rowIndex=rowIndex;grid.getSelectionModel().clearSelections();grid.getSelectionModel().selectRow(rowIndex);gridContextMenu.showAt([coords[0],coords[1]]);}
this.grid.addListener('rowcontextmenu',onGridContextMenu);var gridContextMenu=new Ext.menu.Menu({items:[{iconCls:'icon-accept',text:Philosophy.Globalization.For('Apply'),handler:function(){_this.setWorkSpace();}}]});this.items=this.grid;Phi.view.window.SearchWorkSpace.superclass.initComponent.call(this);},renderWS:function(val,m,record){return'<img src="content/images/Icons/cup.png" />';},load:function(){var pattern=this.patternField.getValue();var position=this.comboPosition.getValue();var paramSearch={pattern:pattern,position:position};this.grid.store.baseParams=paramSearch;this.grid.store.load({params:{start:0,limit:this.pageSize}});this.grid.getEl().highlight();},reload:function(){this.grid.store.reload();},getSelections:function(){var sm=this.grid.getSelectionModel();return sm.getSelections();},setWorkSpace:function(){var s=this.getSelections();if(s.length<1){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Select One'));return false;}
var panelLayer=Philosophy.panelLayer;panelLayer.uncheckAll();var l=s[0].data.Layers.split(',');if(l.length>0){for(x=0;x<l.length;x++)
panelLayer.checkNodeByLayerId(l[x]);panelLayer.applyChanges();}
var baseLayer=s[0].data.BaseLayer;if(baseLayer){Philosophy.mainToolbar.baseLayerCombo.setValue(baseLayer);Philosophy.mainToolbar.baseLayerCombo.setBaseLayerByName(baseLayer);};var pointVO=s[0].data.pointVO;var point={lon:pointVO.Lon,lat:pointVO.Lat,zoom:pointVO.Zoom};Philosophy.Map.setCenter(point);}});Ext.ns("Phi.view.window");Phi.view.window.DrawCoordinate=Ext.extend(Ext.Window,{title:Philosophy.Globalization.For('Draw Coordinates'),width:400,height:300,closeAction:'close',maximizable:false,modal:false,plain:true,layout:'border',initComponent:function(){var _this=this;this.fuField=new Ext.ux.form.FileUploadField({xtype:'fileuploadfield',id:'file',emptyText:'Select an File',fieldLabel:'File <b>(txt,xls,xlsx)</b>',name:'file',buttonText:'',buttonCfg:{iconCls:'upload-icon'}});this.projCombo=new Phi.view.comboBox.Projection({fieldLabel:'Source SRID'});this.markCombo=new Phi.view.comboBox.Marker();this.fp=new Ext.FormPanel({fileUpload:true,region:'center',labelAlign:'top',width:500,frame:true,bodyStyle:'padding: 10px 10px 0 10px;',labelWidth:50,defaults:{anchor:'95%',allowBlank:false,msgTarget:'side'},items:[this.fuField,this.projCombo,this.markCombo]});this.items=[this.fp];this.fp.on('beforeaction',function(form,action){if(action.type=='submit'){Ext.Ajax.StreamResponse=false;_this.projCombo.disable();_this.markCombo.disable();}});this.fp.on('actioncomplete',function(form,action){if(action.type=='submit'){_this.projCombo.enable();_this.markCombo.enable();}});this.fp.on('actionfailed',function(form,action){if(action.type=='submit'){_this.projCombo.enable();_this.markCombo.enable();}});Phi.view.window.DrawCoordinate.superclass.initComponent.call(this);this.addButton(Philosophy.Globalization.For('Close'),function(){_this.close();});this.addButton(Philosophy.Globalization.For('Upload'),function(){Philosophy.Marker.clearAllMarkers();_this.upload();});},upload:function(){var _this=this;if(this.fp.getForm().isValid()&&this.validate()){var q={SRID:this.projCombo.getValue(),type:this.getFileDetails().type}
var queryString=Ext.urlEncode(q);this.fp.getForm().submit({url:Philosophy.UriTemplate.getUri('utilService','utilParseFile','?'+queryString),waitMsg:'Uploading your file...',success:function(fp,o){Ext.MessageBox.show({maximizable:false,closable:false,resizable:false,title:'',msg:_this.buildSuccessMsg(o.result),width:300,buttons:Ext.MessageBox.OK});_this.draw(o.result);_this.close();},failure:function(fp,o){var errorMsg=o.result.errorMsg;Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),errorMsg);}});}},draw:function(response,marker){var markers=response.markers;var bbox=response.bbox;var markerId=this.markCombo.getValue();var fileName=this.fuField.getValue();for(i=0;i<markers.length;i++)
Philosophy.Marker.drawMarker(markers[i].Point.X,markers[i].Point.Y,markerId,markers[i].Data,fileName);var bound=new OpenLayers.Bounds(bbox.minx,bbox.miny,bbox.maxx,bbox.maxy);Philosophy.Map.zoomToExtent(bound,true);},buildSuccessMsg:function(response){var file=this.getFileDetails().name;var type=response.type;var totalPoints=response.markers.length;var html='<div class="main_container">';html+="<b> Archivo procesado con exito</b>&nbsp;<img src='content/images/icons/tick.png'/><br/><br/>";html+="<table>";html+="    <tr><td width='100'><b>file</b></td><td>"+file+"</td></tr>";html+="    <tr><td><b>type</b></td><td>"+type+"</td></tr>";html+="    <tr><td><b>points</b></td><td>"+totalPoints+"</td></tr>";html+="</table>";html+='</div>';return html;},validate:function(){var file=this.getFileDetails();var errorMsg="El archivo <b>"+file.name+"</b>: Debe tener extencion <b>txt, xls, xslx</b>";if(!file.ext){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),errorMsg);return false}
if(file.type=="TXT"||file.type=="XLS"||file.type=="XLSX")
return true
else{Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),errorMsg);return false}
return false},getFileDetails:function(){var fileName=this.fuField.getValue();var f=fileName.split('.');var len=f.length;var ext=(len==1)?false:true;var file={name:fileName,type:f[len-1].toUpperCase(),ext:ext}
return file;}});Ext.ns("Phi.view.window");Phi.view.window.ConvertCoordinate=Ext.extend(Ext.Window,{title:Philosophy.Globalization.For('Convert Coordinates'),width:400,height:300,closeAction:'close',maximizable:false,modal:false,plain:true,layout:'border',initComponent:function(){var _this=this;this.fuField=new Ext.ux.form.FileUploadField({xtype:'fileuploadfield',id:'file',emptyText:'Select an File',fieldLabel:'File <b>(txt,xls,xlsx)</b>',name:'file',buttonText:'',buttonCfg:{iconCls:'upload-icon'}});this.sourceProjCombo=new Phi.view.comboBox.Projection({fieldLabel:'Source SRID'});this.targetProjCombo=new Phi.view.comboBox.Projection({fieldLabel:'Target SRID'});this.fp=new Ext.FormPanel({fileUpload:true,region:'center',labelAlign:'top',width:500,frame:true,bodyStyle:'padding: 10px 10px 0 10px;',labelWidth:50,defaults:{anchor:'95%',allowBlank:false,msgTarget:'side'},items:[this.fuField,this.sourceProjCombo,this.targetProjCombo]});this.items=[this.fp];this.fp.on('beforeaction',function(form,action){if(action.type=='submit'){Ext.Ajax.StreamResponse=true;_this.sourceProjCombo.disable();_this.targetProjCombo.disable();}});this.fp.on('actioncomplete',function(form,action){if(action.type=='submit'){_this.sourceProjCombo.enable();_this.targetProjCombo.enable();}});this.fp.on('actionfailed',function(form,action){if(action.type=='submit'){_this.sourceProjCombo.enable();_this.targetProjCombo.enable();}});Phi.view.window.ConvertCoordinate.superclass.initComponent.call(this);this.addButton(Philosophy.Globalization.For('Close'),function(){_this.close();});this.addButton(Philosophy.Globalization.For('Upload'),function(){_this.upload();});},upload:function(){var _this=this;if(this.fp.getForm().isValid()&&this.validate()){var q={sourceSrid:this.sourceProjCombo.getValue(),targetSrid:this.targetProjCombo.getValue(),type:this.getFileDetails().type}
var queryString=Ext.urlEncode(q);this.fp.getForm().submit({url:Philosophy.UriTemplate.getUri('utilService','utilTransformFile','?'+queryString),success:function(fp,o){},failure:function(fp,o){alert('fail');}});}},validate:function(){var sourceSrid=this.sourceProjCombo.getValue();var targetSrid=this.targetProjCombo.getValue();if(sourceSrid==targetSrid){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),'las projecciones deben ser diferentes.');return false}
var file=this.getFileDetails();var errorMsg="El archivo <b>"+file.name+"</b>: Debe tener extencion <b>txt, xls, xslx</b>";if(!file.ext){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),errorMsg);return false}
if(file.type=="TXT"||file.type=="XLS"||file.type=="XLSX")
return true
else{Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),errorMsg);return false}
return false},getFileDetails:function(){var fileName=this.fuField.getValue();var f=fileName.split('.');var len=f.length;var ext=(len==1)?false:true;var file={name:fileName,type:f[len-1].toUpperCase(),ext:ext}
return file;}});Ext.ns("Phi.view.window");Phi.view.window.KMLUpload=Ext.extend(Ext.Window,{title:Philosophy.Globalization.For('KML Upload'),width:400,height:300,closeAction:'close',maximizable:false,modal:false,plain:true,layout:'border',initComponent:function(){var _this=this;this.fuField=new Ext.ux.form.FileUploadField({xtype:'fileuploadfield',id:'file',emptyText:'Select an File',fieldLabel:'File <b>(kml)</b>',name:'file',buttonText:'',buttonCfg:{iconCls:'upload-icon'}});this.fp=new Ext.FormPanel({fileUpload:true,region:'center',labelAlign:'top',width:500,frame:true,bodyStyle:'padding: 10px 10px 0 10px;',labelWidth:50,defaults:{anchor:'95%',allowBlank:false,msgTarget:'side'},items:[this.fuField]});this.items=[this.fp];this.fp.on('beforeaction',function(form,action){if(action.type=='submit'){Ext.Ajax.StreamResponse=false;}});Phi.view.window.KMLUpload.superclass.initComponent.call(this);this.addButton(Philosophy.Globalization.For('Close'),function(){_this.close();});this.addButton(Philosophy.Globalization.For('Upload'),function(){_this.upload();});},upload:function(){var _this=this;if(this.fp.getForm().isValid()&&this.validate()){this.fp.getForm().submit({url:Philosophy.UriTemplate.getUri('utilService','utilProxyTextFile'),waitMsg:'Uploading your file...',success:function(fp,o){_this.addKMLLayer(o);},failure:function(fp,o){var errorMsg=o.result.errorMsg;Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),errorMsg);}});}},addKMLLayer:function(o){var _this=this;var filename=o.result.targetFilename;var desc=o.result.sourceFilename;var url=Philosophy.Config.kmlFileUrl+filename;var kml=new OpenLayers.Layer.GML(desc,url,{format:OpenLayers.Format.KML,projection:new OpenLayers.Projection("EPSG:4326"),eventListeners:{'featuresadded':_this.zoomToDataExtent},formatOptions:{extractStyles:true,extractAttributes:true}});Philosophy.Map.map.addLayer(kml);},zoomToDataExtent:function(o){var maxExtent=null;var features=o.features;if(features&&(features.length>0)){maxExtent=new OpenLayers.Bounds();for(var i=0,len=features.length;i<len;i++){maxExtent.extend(features[i].geometry.getBounds());}}
Philosophy.Map.zoomToExtent(maxExtent,true);},validate:function(){var file=this.getFileDetails();var errorMsg="El archivo <b>"+file.name+"</b>: Debe tener extencion <b>kml</b>";if(!file.ext){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),errorMsg);return false}
if(file.type=="KML")
return true
else{Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),errorMsg);return false}
return false},getFileDetails:function(){var fileName=this.fuField.getValue();var f=fileName.split('.');var len=f.length;var ext=(len==1)?false:true;var file={name:fileName,type:f[len-1].toUpperCase(),ext:ext}
return file;}});﻿
Ext.ns("Phi.view.window");ButtonPanel=Ext.extend(Ext.Panel,{defaultType:'button',baseCls:'x-plain',cls:'btn-panel',region:'center',constructor:function(){this.zoomBoxIn=new Ext.Button({iconCls:'icon-zoom-box',enableToggle:true,toggleGroup:'control',scale:'medium',tooltip:{title:Philosophy.Globalization.For('Zoom Box In'),text:Philosophy.Globalization.For('Zoom Box In Desc')},handler:function(b){Philosophy.Map.deactivateAllControls();if(b.pressed)
Philosophy.Map.activateCustomControl('zoom_box');}});this.zoomBoxOut=new Ext.Button({iconCls:'icon-zoom-box-out',enableToggle:true,toggleGroup:'control',scale:'medium',tooltip:{title:Philosophy.Globalization.For('Zoom Box Out'),text:Philosophy.Globalization.For('Zoom Box Out Desc')},handler:function(b){Philosophy.Map.deactivateAllControls();if(b.pressed)
Philosophy.Map.activateCustomControl('zoom_box_out');}});this.zoomIn=new Ext.Button({iconCls:'icon-zoom-in',scale:'medium',tooltip:{title:Philosophy.Globalization.For('Zoom In'),text:Philosophy.Globalization.For('Zoom In Desc')},handler:function(){Philosophy.Map.zoomIn();}});this.zoomOut=new Ext.Button({iconCls:'icon-zoom-out',scale:'medium',tooltip:{title:Philosophy.Globalization.For('Zoom Out'),text:Philosophy.Globalization.For('Zoom Out Desc')},handler:function(){Philosophy.Map.zoomOut();}});this.zoomInit=new Ext.Button({iconCls:'icon-world',scale:'medium',tooltip:{title:Philosophy.Globalization.For('Zoom Init'),text:Philosophy.Globalization.For('Zoom Init Desc')},handler:function(){Philosophy.Map.zoomInit();}});this.pan=new Ext.Button({iconCls:'icon-hand',enableToggle:true,toggleGroup:'control',scale:'medium',tooltip:{title:Philosophy.Globalization.For('Pan'),text:Philosophy.Globalization.For('Pan Desc')},handler:function(){Philosophy.Map.deactivateAllControls();}});this.undo=new Ext.Button({iconCls:'icon-undo',scale:'medium',disabled:true,tooltip:{title:Philosophy.Globalization.For('Undo'),text:Philosophy.Globalization.For('Undo Desc')},handler:function(){Philosophy.Map.navHistory.previousTrigger();}});this.redo=new Ext.Button({iconCls:'icon-redo',scale:'medium',disabled:true,tooltip:{title:Philosophy.Globalization.For('Redo'),text:Philosophy.Globalization.For('Redo Desc')},handler:function(){Philosophy.Map.navHistory.nextTrigger();}});this.areaInfo=new Ext.Button({iconCls:'icon-area-info',enableToggle:true,toggleGroup:'control',scale:'medium',tooltip:{title:Philosophy.Globalization.For('Area Info'),text:Philosophy.Globalization.For('Area Info Desc')},handler:function(b){Philosophy.Map.deactivateAllControls();if(b.pressed)
Philosophy.Map.activateCustomControl('box_layer_info');}});this.info=new Ext.Button({iconCls:'icon-info',enableToggle:true,toggleGroup:'control',scale:'medium',tooltip:{title:Philosophy.Globalization.For('Info'),text:Philosophy.Globalization.For('Info Desc')},handler:function(b){Philosophy.Map.deactivateAllControls();if(b.pressed)
Philosophy.Map.activateCustomControl('click_layer_info');}});this.layerSearch=new Ext.Button({iconCls:'icon-binocu',scale:'medium',disabled:false,tooltip:{title:Philosophy.Globalization.For('Search'),text:Philosophy.Globalization.For('Search Desc')},handler:function(){Philosophy.panelLayer.showSearch();}});this.coordinate=new Ext.Button({iconCls:'icon-coo',enableToggle:true,toggleGroup:'control',scale:'medium',disabled:false,tooltip:{title:Philosophy.Globalization.For('Coordinates'),text:Philosophy.Globalization.For('Coordinate Desc')},handler:function(){Philosophy.Map.deactivateAllControls();}});this.coordinate.on('toggle',function(b,pressed){if(pressed){Philosophy.drawXY=new Phi.view.window.drawXY()||Philosophy.draXY;Philosophy.drawXY.show();}
else{Philosophy.drawXY.close();}});this.measure=new Ext.Button({iconCls:'icon-measure-alt',enableToggle:true,toggleGroup:'control',scale:'medium',tooltip:{title:Philosophy.Globalization.For('Measure'),text:Philosophy.Globalization.For('Measeure Desc')},handler:function(b){Philosophy.Map.deactivateAllControls();if(b.pressed)
Philosophy.Map.activateMeasureControl('line');}});this.measure.on('toggle',function(b,pressed){if(pressed){Philosophy.measureOutput=new Phi.view.window.MeasureOutPut()||Philosophy.measureOutput;Philosophy.measureOutput.show();}
else{Philosophy.measureOutput.close();}});this.area=new Ext.Button({iconCls:'icon-area-alt',enableToggle:true,toggleGroup:'control',scale:'medium',tooltip:{title:Philosophy.Globalization.For('Area'),text:Philosophy.Globalization.For('Area Desc')},handler:function(b){Philosophy.Map.deactivateAllControls();if(b.pressed)
Philosophy.Map.activateMeasureControl('polygon');}});this.area.on('toggle',function(b,pressed){if(pressed){Philosophy.areaOutput=new Phi.view.window.MeasureOutPut()||Philosophy.areaOutput;Philosophy.areaOutput.show();}
else{Philosophy.areaOutput.close();}});this.link=new Ext.Button({iconCls:'icon-link',scale:'medium',disabled:false,tooltip:{title:Philosophy.Globalization.For('Link'),text:Philosophy.Globalization.For('Link Desc')},handler:function(){alert('TODO');}});this.metadata=new Ext.Button({iconCls:'icon-metadata',scale:'medium',disabled:false,tooltip:{title:Philosophy.Globalization.For('Metadata'),text:Philosophy.Globalization.For('Metadata Desc')},handler:function(){alert('TODO');}});var items=[this.zoomBoxIn,this.zoomBoxOut,this.zoomIn,this.zoomOut,this.zoomInit,this.pan,this.undo,this.redo,this.info,this.areaInfo,this.layerSearch,this.coordinate,this.measure,this.area,this.link,this.metadata];ButtonPanel.superclass.constructor.call(this,{items:items});}});Phi.view.window.QuickToolBar=Ext.extend(Ext.Window,{title:'',maximizable:false,closable:false,resizable:false,draggable:false,modal:false,plain:true,bodyStyle:'padding:2px 2px 2px 2px',initComponent:function(){this.bp=new ButtonPanel();this.items=this.bp;Phi.view.window.QuickToolBar.superclass.initComponent.call(this);},align:function(c){c=c||Ext.get("map");this.alignTo(c,'tr-tr?',[-3,3]);}});Ext.ns("Phi.view.window");Phi.view.window.MarkerData=Ext.extend(Ext.Window,{title:Philosophy.Globalization.For('Marker Description'),width:250,height:250,closeAction:'close',maximizable:false,modal:false,plain:true,layout:'border',coordinate:[],data:[],initComponent:function(){var _this=this;var store=new Ext.data.ArrayStore({fields:[{name:'data'}]});store.loadData(_this.buildData());var grid=new Ext.grid.GridPanel({store:store,columns:[{width:200,sortable:true,dataIndex:'data'}]});var p=new Ext.Panel({title:'',region:'center',margins:'5 5 5 5',layout:'fit',items:[grid],autoScroll:true});this.items=[p];Phi.view.window.MarkerData.superclass.initComponent.call(this);this.addButton(Philosophy.Globalization.For('Close'),function(){_this.close();});},buildData:function(){var d=[];if(this.data){for(var i=0;i<this.data.length;i++){d.push([this.data[i]]);}}
d.unshift(['<b>'+this.coordinate[1]+'</b>']);d.unshift(['<b>'+this.coordinate[0]+'</b>']);return d;}});Ext.ns("Phi.view.window");Phi.view.window.Link=Ext.extend(Ext.Window,{title:Philosophy.Globalization.For('Links'),width:600,height:400,closeAction:'close',maximizable:false,modal:false,plain:true,layout:'anchor',x:100,y:100,modal:true,pageSize:25,layer:null,initComponent:function(){var _this=this;var reader=new Ext.data.JsonReader({root:'List',totalProperty:'Total',fields:["FileName","FilePhisycalName","Description"]});var proxy=new Ext.data.HttpProxy({method:'GET',url:Philosophy.UriTemplate.getUri('layerService','linksByLayer')});var params={layerName:'cerrocolorado.b_botadero'};var ds=new Ext.data.Store({baseParams:params,reader:reader,proxy:proxy,sortInfo:{field:'FileName',direction:"ASC"}});var cm=new Ext.grid.ColumnModel([{header:'',width:25,dataIndex:'FileName',renderer:_this.renderAttach},{header:Philosophy.Globalization.For('File'),width:150,sortable:true,dataIndex:'FilePhisycalName'},{header:Philosophy.Globalization.For('Description'),width:350,sortable:true,dataIndex:'Description'}]);var ptbar=new Ext.PagingToolbar({store:ds,pageSize:this.pageSize,displayInfo:true,displayMsg:'{0} - {1} of {2}',emptyMsg:Philosophy.Globalization.For('Empty')});var view=new Ext.grid.GridView({forceFit:false,enableRowBody:true,ignoreAdd:true,emptyText:Philosophy.Globalization.For('Empty')});this.grid=new Ext.grid.GridPanel({title:'',frame:true,height:300,ds:ds,cm:cm,view:view,bbar:ptbar,listeners:{rowdblclick:function(grid,rowIndex){}}});this.grid.on('rowdblclick',this.downloadFile);this.items=[this.grid];Phi.view.window.Link.superclass.initComponent.call(this);this.addButton(Philosophy.Globalization.For('Close'),function(){_this.close();});this.load();},renderAttach:function(val,m,record){fileName=record.get("FileName");var link=Philosophy.Config.linkFileUrl+fileName;var t='<a href="'+link+'" target="_blank">';t=t+'<img src="content/images/icons/attach.png" />';t=t+'</a>';return t;},load:function(){var params={layerName:this.layer};this.grid.store.baseParams=params;this.grid.store.load({params:{start:0,limit:this.pageSize}});},downloadFile:function(){alert('tezt');}});Ext.ns("Phi.view.window");Phi.view.window.MeasureOutPut=Ext.extend(Ext.Window,{title:'',maximizable:false,closable:false,resizable:false,draggable:true,modal:false,width:130,height:50,plain:true,bodyStyle:'padding:2px 2px 2px 2px',layout:'border',initComponent:function(){var _this=this;var p=new Ext.Panel({title:'',region:'center',layout:'fit',items:'',autoScroll:true,html:'<div style="padding:7px;font-weight:bold" id="win_measure_output" />'});this.items=[p];Phi.view.window.MeasureOutPut.superclass.initComponent.call(this);},show:function(){Phi.view.window.MeasureOutPut.superclass.show.call(this);this.align();this.getEl().fadeIn({duration:1});},align:function(c){c=c||Ext.get("map");this.alignTo(c,'t-t?',[-3,3]);}});Ext.ns("Phi.view.window");Phi.view.window.drawXY=Ext.extend(Ext.Window,{title:Philosophy.Globalization.For('Draw coordinate')+' [EPSG:4326]',width:360,autoHeight:true,closable:true,maximizable:false,modal:false,plain:true,initComponent:function(){var _this=this;this.projCombo=new Phi.view.comboBox.Projection({fieldLabel:'SRID'});this.projCombo.on('select',function(combo,record){var title=Philosophy.Globalization.For('Draw coordinate')+' [EPSG: '+record.data.value+']';_this.setTitle(title);});this.markerCombo=new Phi.view.comboBox.Marker();this.inputX=new Ext.form.NumberField({fieldLabel:'X'});this.inputY=new Ext.form.NumberField({fieldLabel:'Y'});this.markerTitle=new Ext.form.TextField({fieldLabel:'Title'});this.markerDesc=new Ext.form.TextField({fieldLabel:'Description'});this.form=new Ext.FormPanel({labelWidth:75,frame:true,title:'',bodyStyle:'padding:5px 5px 5px 5px',width:340,items:[{xtype:'fieldset',title:'Coordinate Information',autoHeight:true,defaults:{anchor:'95%',allowBlank:false},items:[this.inputX,this.inputY]},{xtype:'fieldset',title:'Datos opcionales',collapsible:true,collapsed:true,autoHeight:true,defaults:{anchor:'95%',allowBlank:true},items:[this.projCombo,this.markerCombo,this.markerTitle,this.markerDesc]}]});this.items=[this.form];Phi.view.window.drawXY.superclass.initComponent.call(this);this.addButton(Philosophy.Globalization.For('Close'),function(){_this.close();});this.addButton(Philosophy.Globalization.For('Submit'),function(){_this.drawMarker();});},show:function(){Phi.view.window.drawXY.superclass.show.call(this);this.align();this.getEl().fadeIn({duration:1});},align:function(c){c=c||Ext.get("map");this.alignTo(c,'t-t?',[-3,3]);},close:function(){Philosophy.mapQuickToolBar.bp.pan.toggle(true);Phi.view.window.drawXY.superclass.close.call(this);},drawMarker:function(){if(this.form.getForm().isValid()){var proj=this.projCombo.getValue();var markerId=this.markerCombo.getValue();var x=this.inputX.getValue();var y=this.inputY.getValue();var z=12;var markerTitle=this.markerTitle.getValue();var markerDesc=this.markerDesc.getValue();if(proj!='WSM'){var lonLat=Philosophy.Map.transformPoint(x,y,'EPSG:'+proj,'EPSG:900913');x=lonLat.lon;y=lonLat.lat;}
Philosophy.Marker.drawMarker(x,y,markerId,null,markerTitle,markerDesc);Philosophy.Map.setCenter({lon:x,lat:y,zoom:z});}}});Ext.ns("Phi.view.window");Phi.view.window.LayerDetail=Ext.extend(Ext.Window,{title:Philosophy.Globalization.For('Layer Detail'),width:330,height:195,closeAction:'close',maximizable:false,modal:false,plain:true,layout:'fit',layer:null,initComponent:function(){var _this=this;this.panel=new Ext.Panel({title:'',margins:'5 5 5 5',layout:'fit',items:'',autoScroll:true});this.items=[this.panel];Phi.view.window.LayerDetail.superclass.initComponent.call(this);this.addButton(Philosophy.Globalization.For('Close'),function(){_this.close();});this.readLayer();},readLayer:function(){var _this=this;var q={Name:this.layer};var queryString=Ext.urlEncode(q);Ext.Ajax.request({url:Philosophy.UriTemplate.getUri('layerService','layerRead','?'+queryString),headers:{'Content-Type':'text/json'},failure:function(response,options){Ext.MessageBox.alert(Philosophy.Globalization.For('Warning'),Philosophy.Globalization.For('Problem in call'));},success:function(response,options){var l=Ext.util.JSON.decode(response.responseText);_this.buildHTML(l);}});},buildHTML:function(l){var legend=Philosophy.Config.wmsBigLegend+'cc:'+this.layer.split('.')[1];var fixDate=Philosophy.Util.fixWCFJsonDate(l.Date);var date=Ext.util.Format.date(fixDate,'d/m/Y');var html=[];html.push('<div id="layer-detail-container" style="float:left;margin-right:3px;">');html.push('<img src="'+legend+'" style="border:1px solid #ccc; padding-left:5px;float:left;" />');html.push('</div>');html.push('<div style="padding-top:10px;">');html.push('<table cellpadding="0" cellspacing="0">');html.push('<tr><td width="80"><b>name </b>:</td><td class="main_font">'+l.Title+'</td></tr>');html.push('<tr><td><b>type</b>:</td><td class="main_font">'+l.Type+'</td></tr>');html.push('<tr><td><b>date</b>:</td><td class="main_font">'+date+'</td></tr>');html.push('</table>');html.push('</div>');this.panel.body.update(html.join(''));}});Ext.ns("Phi.view.window");Phi.view.window.GenericLayersGrid=Ext.extend(Ext.Window,{closeAction:'close',maximizable:false,modal:true,plain:true,layout:'border',params:null,ds:null,cm:null,initComponent:function(){var _this=this;var view=new Ext.grid.GridView({forceFit:false,enableRowBody:true,ignoreAdd:true,emptyText:Philosophy.Globalization.For('No record found')});this.grid=new Ext.grid.GridPanel({region:'center',loadMask:true,frame:true,header:false,view:view,ds:this.ds,cm:this.cm});function onGridContextMenu(grid,rowIndex,e){e.stopEvent();var coords=e.getXY();_this.layerContextMenu.showAt([coords[0],coords[1]]);_this.grid.getSelectionModel().clearSelections();_this.grid.getSelectionModel().selectRow(rowIndex);var layerName=_this.getlayerNameFromSelection();_this.layerContextMenu.layerName=layerName;}
this.grid.addListener('rowcontextmenu',onGridContextMenu);this.layerContextMenu=new Phi.view.menu.Layer();this.items=[this.grid];Phi.view.window.GenericLayersGrid.superclass.initComponent.call(this);this.addButton(Philosophy.Globalization.For('Close'),function(){_this.close();});this.ds.load({params:this.params});},getlayerNameFromSelection:function(){var selections=this.grid.getSelectionModel().getSelections();return selections[0].data.Name;}});OpenLayers.Control.ClickAddLocation=OpenLayers.Class(OpenLayers.Control,{defaultHandlerOptions:{'single':true,'double':false,'pixelTolerance':0,'stopSingle':false,'stopDouble':false},initialize:function(options){this.handlerOptions=OpenLayers.Util.extend({},this.defaultHandlerOptions);OpenLayers.Control.prototype.initialize.apply(this,arguments);this.handler=new OpenLayers.Handler.Click(this,{'click':this.trigger},this.handlerOptions);},trigger:function(e){var lonLat=Philosophy.Map.map.getLonLatFromViewPortPx(e.xy);var pointVO={Lat:lonLat.lat,Lon:lonLat.lon,Zoom:Philosophy.Map.map.getZoom()};var marker=Philosophy.Marker.drawMarker(pointVO.Lon,pointVO.Lat,'orange',null,'new marker');var win=new Phi.view.window.FormLocation({create:true,x:100,y:100,point:pointVO,marker:marker});win.show();}});OpenLayers.Control.ClickLayerInfo=OpenLayers.Class(OpenLayers.Control,{defaultHandlerOptions:{'single':true,'double':false,'pixelTolerance':0,'stopSingle':false,'stopDouble':false},initialize:function(options){this.handlerOptions=OpenLayers.Util.extend({},this.defaultHandlerOptions);OpenLayers.Control.prototype.initialize.apply(this,arguments);this.handler=new OpenLayers.Handler.Click(this,{'click':this.trigger},this.handlerOptions);},trigger:function(e){var lonLat=Philosophy.Map.map.getLonLatFromViewPortPx(e.xy);lonLat.transform(Philosophy.Map.map.getProjectionObject(),new OpenLayers.Projection("EPSG:"+Philosophy.Config.SRID));var r=Philosophy.Map.map.getResolution();var distance=r*5;var layerNames=Philosophy.Layer.getLayers().join(',');var layerTitles=Philosophy.Layer.getLayerTitles().join(',');var fields='gid';var params={layerName:layerNames,layerTitle:layerTitles,SRID:Philosophy.Config.SRID,fields:fields,geometry:'POINT('+lonLat.lon+' '+lonLat.lat+')',dist:distance};var proxy=new Ext.data.HttpProxy({method:'GET',url:Philosophy.UriTemplate.getUri('geoService','geoGetGroupWithIn')});var ds=new Ext.data.Store({proxy:proxy,reader:new Ext.data.JsonReader({fields:["Id","LayerName","LayerTitle"]})});var render=function(val,m,record){return'<img src="content/images/icons/vector.png" />';}
var cm=new Ext.grid.ColumnModel([{header:'',width:25,renderer:render},{header:'Id',width:50,dataIndex:'Id'},{header:Philosophy.Globalization.For('Layer'),dataIndex:'LayerTitle',width:140},{header:'',dataIndex:'LayerName',hidden:true}]);var win=new Phi.view.window.MetadataResult({title:'',ds:ds,cm:cm,width:300,height:300,showDetail:true,geomData:false});win.show();ds.load({params:params});}});OpenLayers.Control.ClickPointInfo=OpenLayers.Class(OpenLayers.Control,{defaultHandlerOptions:{'single':true,'double':false,'pixelTolerance':0,'stopSingle':false,'stopDouble':false},initialize:function(options){this.handlerOptions=OpenLayers.Util.extend({},this.defaultHandlerOptions);OpenLayers.Control.prototype.initialize.apply(this,arguments);this.handler=new OpenLayers.Handler.Click(this,{'click':this.trigger},this.handlerOptions);},trigger:function(e){var lonLat=Philosophy.Map.map.getLonLatFromViewPortPx(e.xy);lonLat.transform(Philosophy.Map.map.getProjectionObject(),Philosophy.Map.mousePosition.displayProjection);var lon=new Number(lonLat.lon);var lat=new Number(lonLat.lat);var point={Lat:lonLat.lat,Lon:lonLat.lon,Zoom:Philosophy.Map.map.getZoom()};Ext.MessageBox.show({maximizable:false,closable:false,resizable:false,title:'',msg:'X :  <b>'+point.Lon+'</b><br/>Y :  <b>'+point.Lat+'</b><br/>Zoom :  <b>'+point.Zoom+'</b>',width:300,buttons:Ext.MessageBox.OK});}});OpenLayers.Control.BoxBoundInfo=OpenLayers.Class(OpenLayers.Control,{initialize:function(options){this.handlerOptions=OpenLayers.Util.extend({},this.defaultHandlerOptions);OpenLayers.Control.prototype.initialize.apply(this,arguments);this.handler=new OpenLayers.Handler.Box(this,{"done":this.notice},{keyMask:this.keyMask,boxDivClassName:'olHandlerBoxZoomBoxBlue'});},notice:function(bounds){var lt=Philosophy.Map.map.getLonLatFromPixel(new OpenLayers.Pixel(bounds.left,bounds.top));var rb=Philosophy.Map.map.getLonLatFromPixel(new OpenLayers.Pixel(bounds.right,bounds.bottom));lt.transform(Philosophy.Map.map.getProjectionObject(),Philosophy.Map.mousePosition.displayProjection);rb.transform(Philosophy.Map.map.getProjectionObject(),Philosophy.Map.mousePosition.displayProjection);Ext.MessageBox.show({maximizable:false,closable:false,resizable:false,title:'',msg:'X<sub>1</sub> :  <b>'+lt.lon.toFixed(4)+'</b><br/>Y<sub>1</sub> :  <b>'+lt.lat.toFixed(4)+'</b><br/><br/>X<sub>2</sub> :  <b>'+rb.lon.toFixed(4)+'</b><br/>Y<sub>2</sub> : <b>'+rb.lat.toFixed(4)+'</b>',width:300,buttons:Ext.MessageBox.OK});}});OpenLayers.Control.BoxLayerInfo=OpenLayers.Class(OpenLayers.Control,{initialize:function(options){this.handlerOptions=OpenLayers.Util.extend({},this.defaultHandlerOptions);OpenLayers.Control.prototype.initialize.apply(this,arguments);this.handler=new OpenLayers.Handler.Box(this,{"done":this.notice},{keyMask:this.keyMask,boxDivClassName:'olHandlerBoxZoomBoxBlue'});},notice:function(bounds){var lt=Philosophy.Map.map.getLonLatFromPixel(new OpenLayers.Pixel(bounds.left,bounds.top));var rb=Philosophy.Map.map.getLonLatFromPixel(new OpenLayers.Pixel(bounds.right,bounds.bottom));lt.transform(Philosophy.Map.map.getProjectionObject(),Philosophy.Map.mousePosition.displayProjection);rb.transform(Philosophy.Map.map.getProjectionObject(),Philosophy.Map.mousePosition.displayProjection);var layerNames=Philosophy.Layer.getLayers().join(',');var layerTitles=Philosophy.Layer.getLayerTitles().join(',');var params={layerName:layerNames,layerTitle:layerTitles,SRID:Philosophy.Config.SRID,x1:lt.lon,y1:lt.lat,x2:rb.lon,y2:rb.lat};var proxy=new Ext.data.HttpProxy({method:'GET',url:Philosophy.UriTemplate.getUri('geoService','geoGetGroupWithInBbox')});var ds=new Ext.data.Store({proxy:proxy,reader:new Ext.data.JsonReader({fields:["Name","Title"]})});var renderLegend=function(val,m,record){var src=Philosophy.Config.wmsLegend+'cc:'+val.split('.')[1];return'<img src="'+src+'" style="border:1px solid #ccc;" />';};var cm=new Ext.grid.ColumnModel([{header:'',width:30,sortable:false,renderer:renderLegend,dataIndex:'Name'},{header:Philosophy.Globalization.For('Layer'),dataIndex:'Title',width:140},{header:'',dataIndex:'Name',hidden:true}]);var win=new Phi.view.window.GenericLayersGrid({title:'',ds:ds,cm:cm,params:params,width:300,height:300});win.show();}});Ext.ns("Philosophy");Philosophy.Map={map:null,baseLayer:null,vectorLayer:null,markerLayer:null,measureControls:null,vectorControls:null,customControls:null,mousePosition:null,Init:function(){var _this=this;OpenLayers.Util.MISSING_TILE_URL='content/images/none.png';OpenLayers.Util.onImageLoadError=function(){this.src=OpenLayers.Util.MISSING_TILE_URL;};OpenLayers.IMAGE_RELOAD_ATTEMPTS=3;OpenLayers.Util.onImageLoadErrorColor='transparent';var options={units:'m',numZoomLevels:19,maxExtent:new OpenLayers.Bounds(-20037508,-20037508,20037508,20037508.34),maxResolution:156543.0339,projection:new OpenLayers.Projection('EPSG:900913'),displayProjection:new OpenLayers.Projection('EPSG:4326'),controls:[],eventListeners:{'changebaselayer':_this.onChangeBaseLayer,'zoomend':_this.onChangeZoom,'mousemove':_this.onMouseMove}};var map=new OpenLayers.Map('map',options);var l=['base','parks','water','roads','labels'];var ultramapLayer=new OpenLayers.Layer.UMapGTile("UltraMap Normal",['http://beta.ultramap.cl'],{internalId:'ultramap',icon:'icon-umap',layers:l});var googleLayer=function(type,name,level){return new OpenLayers.Layer.Google(name,{type:type,sphericalMercator:true,internalId:'google',icon:'icon-google',numZoomLevels:level});};var googleNormalLayer=googleLayer(G_NORMAL_MAP,'Google Normal',19);var googleSatelliteLayer=googleLayer(G_SATELLITE_MAP,'Google Satellite',19);var googleHybridLayer=googleLayer(G_HYBRID_MAP,'Google Hybrid',19);var googlePhysicalLayer=googleLayer(G_PHYSICAL_MAP,'Google Physical',16);var veroad=new OpenLayers.Layer.VirtualEarth("Bing Roads",{type:VEMapStyle.Road,sphericalMercator:true,internalId:'ve',icon:'icon-bing'});var veaer=new OpenLayers.Layer.VirtualEarth("Bing Aerial",{type:VEMapStyle.Aerial,sphericalMercator:true,internalId:'ve',icon:'icon-bing'});var vehyb=new OpenLayers.Layer.VirtualEarth("Bing Hybrid",{type:VEMapStyle.Hybrid,sphericalMercator:true,internalId:'ve',icon:'icon-bing'});var osmMapnik=new OpenLayers.Layer.OSM.Mapnik("OSM Mapnik",{numZoomLevels:19,icon:'icon-osm'});var osmArender=new OpenLayers.Layer.OSM.Osmarender("OSM arender ",{numZoomLevels:18,icon:'icon-osm'});function overlay_getTileURL(bounds){var res=this.map.getResolution();var x=Math.round((bounds.left-this.maxExtent.left)/(res*this.tileSize.w));var y=Math.round((bounds.bottom-this.tileOrigin.lat)/(res*this.tileSize.h));var z=this.map.getZoom();if(z>=this.mapMinZoom&&z<=this.mapMaxZoom){return this.url+z+'/'+x+'/'+y+'.'+this.type;}else{return OpenLayers.Util.MISSING_TILE_URL;}}
var rasterLayer=function(description,url,mapMinZoom,mapMaxZoom){mapMinZoom=mapMinZoom||11;mapMaxZoom=mapMaxZoom||18;return new OpenLayers.Layer.TMS(description,url,{type:'png',getURL:overlay_getTileURL,alpha:true,mapMinZoom:mapMinZoom,mapMaxZoom:mapMaxZoom,isBaseLayer:false});}
var wmsLayer=new OpenLayers.Layer.WMS("Geometries",Philosophy.Config.wmsUrl,{layers:Philosophy.Layer.getWMSLayers(Philosophy.Config.wmsNameSpace),styles:'',srs:'EPSG:900913',format:'image/png',tiled:'true',transparent:true},{'opacity':1,'isBaseLayer':false,'wrapDateLine':true});var styleDefault=Philosophy.Theme.defaultStyleVector;var styleSelected=Philosophy.Theme.selectStyleVector;var style={'default':styleDefault,select:styleSelected};var styleMap=new OpenLayers.StyleMap(style);var vectorLayer=new OpenLayers.Layer.Vector(Philosophy.Globalization.For('Vector'),{styleMap:styleMap});var markerLayer=new OpenLayers.Layer.Markers(Philosophy.Globalization.For('Locations'));map.addLayers([ultramapLayer,googleNormalLayer,googleSatelliteLayer,googleHybridLayer,googlePhysicalLayer,veroad,veaer,vehyb,osmArender,osmMapnik,wmsLayer,vectorLayer,markerLayer]);this.map=map;this.baseLayer=googleNormalLayer;this.wmsLayer=wmsLayer;this.vectorLayer=vectorLayer;this.markerLayer=markerLayer;this.mousePosition=new OpenLayers.Control.MousePosition();this.graticule=new OpenLayers.Control.Graticule({visible:false,labelled:true,targetSize:200});this.navHistory=new OpenLayers.Control.NavigationHistory();this.navHistory.onPreviousChange=this.onPreviousChange;this.navHistory.onNextChange=this.onNextChange;var gp=new OpenLayers.Control.GooglePanZoomBar();this.map.onCustomAction=this.onCustomAction;map.addControl(new OpenLayers.Control.Navigation());map.addControl(gp);map.addControl(new OpenLayers.Control.Scale());map.addControl(this.graticule);map.addControl(this.mousePosition);map.addControl(this.navHistory);this.addMeasureControls();this.addVectorControls();this.addCustomControls();map.setBaseLayer(this.baseLayer);this.zoomInit();this.setDisplayProjection("EPSG:32719");},onCustomAction:function(){Philosophy.Map.deactivateAllControls();Philosophy.mapQuickToolBar.bp.pan.toggle(true);},onPreviousChange:function(state){if(state){Philosophy.mapQuickToolBar.bp.undo.enable();}else if(!state){Philosophy.mapQuickToolBar.bp.undo.disable();}},onNextChange:function(state){if(state){Philosophy.mapQuickToolBar.bp.redo.enable();;}else if(!state){Philosophy.mapQuickToolBar.bp.redo.disable();;}},onMouseMove:function(evt){},onChangeBaseLayer:function(layer){Philosophy.Map.baseLayer=layer.layer;},onChangeZoom:function(){},zoomInit:function(){this.setCenter(Philosophy.Theme.initCenter);},getInstance:function(){return this.map;},redrawMainLayer:function(layers){this.mainLayer.mergeNewParams({layers:layers});this.mainLayer.redraw();},redrawMainLayer:function(layers){this.wmsLayer.mergeNewParams({layers:layers});},getZoom:function(){return this.map.getZoom();},setZoom:function(zoom){this.map.zoomTo(zoom);},zoomIn:function(zoom){this.map.zoomIn();},zoomOut:function(zoom){this.map.zoomOut();},zoomToExtent:function(bound){this.map.zoomToExtent(bound)},setCenter:function(center){var lonLat=new OpenLayers.LonLat(center.lon,center.lat);this.map.setCenter(lonLat,center.zoom);},deactivateAllControls:function(){this.deactivateMeasureControl();this.deactivateVectorControl();this.deactivateCustomControl();},setVectorColor:function(s){var styleSelected=Philosophy.Theme.selectStyleVector;var style={'default':s,select:styleSelected};var styleMap=new OpenLayers.StyleMap(style);this.vectorLayer.styleMap=styleMap;this.vectorLayer.redraw();},addVectorControls:function(){var del=function(feature){feature.destroy();};var controls={point:new OpenLayers.Control.DrawFeature(this.vectorLayer,OpenLayers.Handler.Point),line:new OpenLayers.Control.DrawFeature(this.vectorLayer,OpenLayers.Handler.Path),polygon:new OpenLayers.Control.DrawFeature(this.vectorLayer,OpenLayers.Handler.Polygon),regular:new OpenLayers.Control.DrawFeature(this.vectorLayer,OpenLayers.Handler.RegularPolygon,{handlerOptions:{sides:5}}),modify:new OpenLayers.Control.ModifyFeature(this.vectorLayer),drag:new OpenLayers.Control.DragFeature(this.vectorLayer,OpenLayers.Handler.Drag),del:new OpenLayers.Control.SelectFeature(this.vectorLayer,{onSelect:del,box:true})};for(var key in controls){this.map.addControl(controls[key]);}
this.vectorControls=controls;},activateVectorControl:function(type){var control=this.vectorControls[type];control.activate();},deactivateVectorControl:function(){var controls=this.vectorControls;for(var key in controls){controls[key].deactivate();}},addMeasureControls:function(){var _this=this;sketchSymbolizers={'Point':{pointRadius:4,graphicName:'square',fillColor:'white',fillOpacity:1,strokeWidth:1,strokeOpacity:1,strokeColor:'#333333'},'Line':{strokeWidth:3,strokeOpacity:1,strokeColor:'#666666',strokeDashstyle:'dash'},'Polygon':{strokeWidth:2,strokeOpacity:1,strokeColor:'#666666',fillColor:'white',fillOpacity:0.3}};var style=new OpenLayers.Style();style.addRules([new OpenLayers.Rule({symbolizer:sketchSymbolizers})]);var styleMap=new OpenLayers.StyleMap({'default':style});var options={handlerOptions:{style:'default',layerOptions:{styleMap:styleMap},persist:true}};var controls={line:new OpenLayers.Control.Measure(OpenLayers.Handler.Path,options),polygon:new OpenLayers.Control.Measure(OpenLayers.Handler.Polygon,options)};var control;for(var key in controls){control=controls[key];control.events.on({'measure':_this.handleMeasurements,'measurepartial':_this.handleMeasurements});this.map.addControl(control);}
this.measureControls=controls;},activateMeasureControl:function(type){var control=this.measureControls[type];control.activate();},deactivateMeasureControl:function(){var controls=this.measureControls;for(var key in controls){controls[key].deactivate();}},handleMeasurements:function(event){var geometry=event.geometry;var units=event.units;var order=event.order;var measure=event.measure;var element=document.getElementById('win_measure_output');var out="";if(order==1){out+=measure.toFixed(3)+' '+units;if(this.map.getProjection()=='EPSG:4326'){out+='<br /><b>great circle distance: </b>'+Philosophy.Map.calcVincenty(geometry).toFixed(3)+' km *';}}else{out+=measure.toFixed(3)+' '+units+'<sup>2</sup>';}
element.innerHTML=out;},calcVincenty:function(geometry){var dist=0;for(var i=1;i<geometry.components.length;i++){var first=geometry.components[i-1];var second=geometry.components[i];dist+=OpenLayers.Util.distVincenty({lon:first.x,lat:first.y},{lon:second.x,lat:second.y});}
return dist;},parseWKT:function(geomWKT){var wkt=new OpenLayers.Format.WKT();var features=wkt.read(geomWKT);var bounds;if(features){if(features.constructor!=Array){features=[features];}
for(var i=0;i<features.length;++i){if(!bounds){bounds=features[i].geometry.getBounds();}
else{bounds.extend(features[i].geometry.getBounds());}}
Philosophy.Map.vectorLayer.addFeatures(features);}
else{alert('Not valid WKT');}},addCustomControls:function(){var controls={click_layer_info:new OpenLayers.Control.ClickLayerInfo(),click_point_info:new OpenLayers.Control.ClickPointInfo(),click_add_location:new OpenLayers.Control.ClickAddLocation(),box_layer_info:new OpenLayers.Control.BoxLayerInfo(),box_bound_info:new OpenLayers.Control.BoxBoundInfo(),zoom_box:new OpenLayers.Control.ZoomBox(),zoom_box_out:new OpenLayers.Control.ZoomBox({out:true}),zoom_out:new OpenLayers.Control.ZoomOut()};for(var key in controls){this.map.addControl(controls[key]);}
this.customControls=controls;},activateCustomControl:function(type){var control=this.customControls[type];control.activate();},deactivateCustomControl:function(){var controls=this.customControls;for(var key in controls){controls[key].deactivate();}},setDisplayProjection:function(proj){this.map.removeControl(this.mousePosition);var mp=new OpenLayers.Control.MousePosition({displayProjection:new OpenLayers.Projection(proj)});this.mousePosition=mp;this.map.addControl(mp);},transformPoint:function(x,y,source,target){var lonLat=new OpenLayers.LonLat(x,y);lonLat.transform(new OpenLayers.Projection(source),new OpenLayers.Projection(target));return lonLat},WsmToDispProj:function(x,y){var lonLat=new OpenLayers.LonLat(x,y);lonLat.transform(new OpenLayers.Projection("EPSG:900913"),Philosophy.Map.mousePosition.displayProjection);return lonLat}};Ext.ns('Philosophy');Ext.onReady(function(){Ext.QuickTips.init();Philosophy.mainToolbar=new Phi.view.toolbar.MainToolbar({region:'north',height:30});Philosophy.mapContainer=new Ext.Panel({region:'center',html:'<div id="map" style="width:100%; height:100%;" />'});Philosophy.panelUser=new Phi.view.panel.User();Philosophy.panelLayer=new Phi.view.panel.Layer();Philosophy.panelMap=new Phi.view.panel.Map();Philosophy.panelWorkSpace=new Phi.view.panel.WorkSpace();Philosophy.panelLocation=new Phi.view.panel.Location();Philosophy.panelSearch=new Phi.view.panel.Search();Philosophy.dashBoard=new Ext.Panel({region:'west',title:Philosophy.Globalization.For('DashBoard'),layout:'accordion',collapsible:true,collapseMode:Philosophy.Theme.dashBoardCollapseMode,collapsed:Philosophy.Theme.dashBoardCollapsed,useSplitTips:true,autoScroll:true,animate:true,width:300,items:[Philosophy.panelUser,Philosophy.panelLayer,Philosophy.panelMap,Philosophy.panelWorkSpace,Philosophy.panelLocation,Philosophy.panelSearch]});Philosophy.viewport=new Ext.Viewport({layout:'border',defaults:{border:0,split:false,margins:'0 0 0 0'},items:[Philosophy.mainToolbar,Philosophy.dashBoard,Philosophy.mapContainer]});Philosophy.mapQuickToolBar=new Phi.view.window.QuickToolBar({width:'52',height:'400',autoHeight:false});Philosophy.mapQuickToolBar.show();Philosophy.mapQuickToolBar.align();Philosophy.Map.Init();Philosophy.mapContainer.on('resize',function(){Philosophy.mapQuickToolBar.align();Philosophy.Map.map.updateSize();});var winLogin=new Phi.view.window.FormLogin();winLogin.show();});