/*
  phi-model.js 
  Copyright 2005-2011 :-), Inc., released under the Clear BSD  license.

  Includes compressed code under the following licenses:

  (For uncompressed versions of the code used please see the
  phi-model GIT repository: ...)
*/
Ext.ns("Phi");Ext.ns("Philosophy");Philosophy=Phi;Phi.Net=false;var userService=Phi.Net?'svc/UserService.svc/rest':'phi-rest';var layerService=Phi.Net?'svc/LayerService.svc/rest':'phi-rest';var locationService=Phi.Net?'svc/LocationService.svc/rest':'phi-rest';var workspaceService=Phi.Net?'svc/WorkSpaceService.svc/rest':'phi-rest';var groupService=Phi.Net?'svc/GroupService.svc/rest':'phi-rest';var utilService=Phi.Net?'svc/UtilService.svc/rest':'phi-rest';Phi.UriTemplate={users:userService+'/user/all',user:userService+'/user',userLogin:userService+'/user/login',userLogout:userService+'/user/logout',userIsauth:userService+'/user/isauth',userSetPassword:userService+'/user/setpassword',userSearch:userService+'/user/search',userGetLocations:userService+'/user/getlocations',userGetFavLocations:userService+'/user/getfavlocations',userSearchWorkspace:workspaceService+'/user/searchworkspace',userGetLayers:userService+'/user/getlayers',userSearchLayer:userService+'/user/searchlayers',userGetNodes:userService+'/user/getnodes',userGetRasters:userService+'/user/getrasters',layer:layerService+'/layer',layerGetFiles:layerService+'/layer/getfiles',location:locationService+'/location',locationFavorite:locationService+'/location/favorite',workspace:workspaceService+'/workspace',workspaceGetByOwner:workspaceService+'/workspace/getbyowner',workspaceGetUsers:workspaceService+'/workspace/getusers',workspaceAddUsers:workspaceService+'/workspace/addusers',workspaceRemoveUsers:workspaceService+'/workspace/removeusers',group:groupService+'/group',groups:groupService+'/group/all',role:utilService+'/role',roles:utilService+'/role/all',getUri:function(action,option){var hostname='http://'+window.location.hostname+':'+window.location.port+'/';return hostname+Phi.UriTemplate[action]+(option||'');}};Ext.ns("Phi.model");Phi.model.Entity=Ext.extend(Ext.util.Observable,{constructor:function(config){this.addEvents('create','read','update','remove');Phi.model.Entity.superclass.constructor.call(config);},create:function(o){Ext.Ajax.request({url:this.entityURL,method:'POST',headers:{'Content-Type':'text/json'},jsonData:o,scope:this,success:function(r,opt){this.fireEvent('create',o);}})},read:function(id){Ext.Ajax.request({url:this.entityURL+'/'+id,scope:this,success:function(r,opt){var o=Ext.util.JSON.decode(r.responseText);this.fireEvent('read',o);}});},update:function(o){Ext.Ajax.request({url:this.entityURL,method:'PUT',headers:{'Content-Type':'text/json'},jsonData:o,scope:this,success:function(r,opt){this.fireEvent('update',o);}});},remove:function(id){Ext.Ajax.request({url:this.entityURL+'/'+id,method:'DELETE',scope:this,success:function(r,opt){this.fireEvent('remove',r);}});}});Ext.ns("Phi.model");Phi.model.User=Ext.extend(Phi.model.Entity,{entityURL:Phi.UriTemplate.getUri('user'),initComponent:function(config){this.addEvents('login','logout','isauth','setpassword','getfavoriteslocations','getnodes','getrasters','getlayers');Phi.model.User.superclass.initComponent.call(config);},login:function(userName,password){var credentials={userName:userName,password:password}
var valid=false;Ext.Ajax.request({url:Phi.UriTemplate.getUri('userLogin'),method:'POST',headers:{'Content-Type':'text/json'},jsonData:credentials,scope:this,success:function(response,options){var o=Ext.util.JSON.decode(response.responseText);var status=o.success;var user=o.user;this.fireEvent('login',status,credentials,user);}});},logout:function(){Ext.Ajax.request({url:Phi.UriTemplate.getUri('userLogout'),method:'Get',headers:{'Content-Type':'text/json'},scope:this,success:function(response,options){var o=Ext.util.JSON.decode(response.responseText);this.fireEvent('logout',o);}});},isauth:function(){Ext.Ajax.request({url:Phi.UriTemplate.getUri('userIsauth'),method:'Get',headers:{'Content-Type':'text/json'},scope:this,success:function(response,options){var o=Ext.util.JSON.decode(response.responseText);var status=o.success;var user=o.user;this.fireEvent('isauth',status,user);}});},setPassword:function(userName,password){var o={userName:userName,password:password}
Ext.Ajax.request({url:Phi.UriTemplate.getUri('userSetPassword'),method:'POST',headers:{'Content-Type':'text/json'},jsonData:o,scope:this,success:function(response,options){var response=Ext.util.JSON.decode(response.responseText);this.fireEvent('setpassword',response);}});},getFavoritesLocations:function(userName){var p={userName:userName};Ext.Ajax.request({url:Phi.UriTemplate.getUri('userGetFavLocations','?'+Ext.urlEncode(p)),method:'GET',headers:{'Content-Type':'text/json'},scope:this,success:function(response,options){var collection=Ext.util.JSON.decode(response.responseText);locations=collection.entities
this.fireEvent('getfavoriteslocations',locations);}});},getRasters:function(userName){var p={userName:userName};Ext.Ajax.request({url:Phi.UriTemplate.getUri('userGetRasters','?'+Ext.urlEncode(p)),method:'GET',headers:{'Content-Type':'text/json'},scope:this,success:function(response,options){var collection=Ext.util.JSON.decode(response.responseText);rasters=collection.entities
this.fireEvent('getrasters',rasters);}});},getNodes:function(userName){var p={userName:userName};Ext.Ajax.request({url:Phi.UriTemplate.getUri('userGetNodes','?'+Ext.urlEncode(p)),method:'GET',headers:{'Content-Type':'text/json'},scope:this,success:function(response,options){var n=Ext.util.JSON.decode(response.responseText);var nodes=[];nodes.push(n);this.fireEvent('getnodes',nodes);}});},getLayers:function(userName){var p={userName:userName};Ext.Ajax.request({url:Phi.UriTemplate.getUri('userGetLayers','?'+Ext.urlEncode(p)),method:'GET',headers:{'Content-Type':'text/json'},scope:this,success:function(response,options){var o=Ext.util.JSON.decode(response.responseText);this.fireEvent('getlayers',o.entities);}});}});Ext.ns("Phi.model");Phi.model.Layer=Ext.extend(Phi.model.Entity,{entityURL:Phi.UriTemplate.getUri('layer'),initComponent:function(config){Phi.model.Layer.superclass.initComponent.call(config);},read:function(layerName){var p={layerName:layerName};Ext.Ajax.request({url:this.entityURL+'?'+Ext.urlEncode(p),scope:this,success:function(r,opt){var o=Ext.util.JSON.decode(r.responseText);this.fireEvent('read',o);}});}});Ext.ns("Phi.model");Phi.model.Location=Ext.extend(Phi.model.Entity,{entityURL:Phi.UriTemplate.getUri('location'),initComponent:function(config){this.addEvents('favorite');Phi.model.Location.superclass.initComponent.call(config);},favorite:function(id,favorite){var o={id:id,favorite:favorite}
Ext.Ajax.request({url:Phi.UriTemplate.getUri('locationFavorite'),method:'POST',headers:{'Content-Type':'text/json'},jsonData:o,scope:this,success:function(response,options){var response=Ext.util.JSON.decode(response.responseText);this.fireEvent('favorite',response);}});}});Ext.ns("Phi.model");Phi.model.Workspace=Ext.extend(Phi.model.Entity,{entityURL:Phi.UriTemplate.getUri('workspace'),initComponent:function(config){this.addEvents('addusers','removeusers');Phi.model.Workspace.superclass.initComponent.call(config);},addUsers:function(id,userNames){var params={id:id,userNames:userNames}
Ext.Ajax.request({url:Phi.UriTemplate.getUri('workspaceAddUsers'),method:'POST',headers:{'Content-Type':'text/json'},jsonData:params,scope:this,success:function(response,options){var o=Ext.util.JSON.decode(response.responseText);this.fireEvent('addusers',o);}});},removeUsers:function(id,userNames){var params={id:id,userNames:userNames}
Ext.Ajax.request({url:Phi.UriTemplate.getUri('workspaceRemoveUsers'),method:'POST',headers:{'Content-Type':'text/json'},jsonData:params,scope:this,success:function(response,options){var o=Ext.util.JSON.decode(response.responseText);this.fireEvent('removeusers',o);}});}});Ext.ns("Phi.model");Phi.model.Role=Ext.extend(Phi.model.Entity,{entityURL:Phi.UriTemplate.getUri('role'),initComponent:function(config){this.addEvents('getroles');Phi.model.Role.superclass.initComponent.call(config);},getRoles:function(){Ext.Ajax.request({url:Phi.UriTemplate.getUri('roles'),method:'GET',headers:{'Content-Type':'text/json'},scope:this,success:function(response,options){var o=Ext.util.JSON.decode(response.responseText);this.fireEvent('getroles',o);}});}});Ext.ns("Phi.model");Phi.model.Group=Ext.extend(Phi.model.Entity,{entityURL:Phi.UriTemplate.getUri('group'),initComponent:function(config){this.addEvents('getgroups');Phi.model.Group.superclass.initComponent.call(config);},getGroups:function(){Ext.Ajax.request({url:Phi.UriTemplate.getUri('groups'),method:'GET',headers:{'Content-Type':'text/json'},scope:this,success:function(response,options){var o=Ext.util.JSON.decode(response.responseText);this.fireEvent('getgroups',o);}});}});